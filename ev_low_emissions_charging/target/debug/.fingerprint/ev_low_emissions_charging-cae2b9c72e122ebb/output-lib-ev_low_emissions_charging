{"message":"unused import: `std::fs::File`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\lib.rs","byte_start":449,"byte_end":462,"line_start":10,"line_end":10,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"use std::fs::File;","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src\\lib.rs","byte_start":445,"byte_end":463,"line_start":10,"line_end":10,"column_start":1,"column_end":19,"is_primary":true,"text":[{"text":"use std::fs::File;","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `std::fs::File`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\lib.rs:10:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m10\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0muse std::fs::File;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"message":"unused import: `std::io::Read`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\lib.rs","byte_start":469,"byte_end":482,"line_start":11,"line_end":11,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"use std::io::Read;","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src\\lib.rs","byte_start":465,"byte_end":483,"line_start":11,"line_end":11,"column_start":1,"column_end":19,"is_primary":true,"text":[{"text":"use std::io::Read;","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `std::io::Read`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\lib.rs:11:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0muse std::io::Read;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `std::env`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\lib.rs","byte_start":489,"byte_end":497,"line_start":12,"line_end":12,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"use std::env;","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src\\lib.rs","byte_start":485,"byte_end":498,"line_start":12,"line_end":12,"column_start":1,"column_end":14,"is_primary":true,"text":[{"text":"use std::env;","highlight_start":1,"highlight_end":14}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `std::env`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\lib.rs:12:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m12\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0muse std::env;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\n\n"}
{"message":"unused imports: `Deserialize`, `Serialize`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\lib.rs","byte_start":512,"byte_end":521,"line_start":13,"line_end":13,"column_start":13,"column_end":22,"is_primary":true,"text":[{"text":"use serde::{Serialize, Deserialize};","highlight_start":13,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\lib.rs","byte_start":523,"byte_end":534,"line_start":13,"line_end":13,"column_start":24,"column_end":35,"is_primary":true,"text":[{"text":"use serde::{Serialize, Deserialize};","highlight_start":24,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src\\lib.rs","byte_start":500,"byte_end":536,"line_start":13,"line_end":13,"column_start":1,"column_end":37,"is_primary":true,"text":[{"text":"use serde::{Serialize, Deserialize};","highlight_start":1,"highlight_end":37}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused imports: `Deserialize`, `Serialize`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\lib.rs:13:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0muse serde::{Serialize, Deserialize};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused imports: `DateTime`, `Duration`, `Utc`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\lib.rs","byte_start":551,"byte_end":559,"line_start":14,"line_end":14,"column_start":14,"column_end":22,"is_primary":true,"text":[{"text":"use chrono::{DateTime, Duration, Utc};","highlight_start":14,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\lib.rs","byte_start":561,"byte_end":569,"line_start":14,"line_end":14,"column_start":24,"column_end":32,"is_primary":true,"text":[{"text":"use chrono::{DateTime, Duration, Utc};","highlight_start":24,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\lib.rs","byte_start":571,"byte_end":574,"line_start":14,"line_end":14,"column_start":34,"column_end":37,"is_primary":true,"text":[{"text":"use chrono::{DateTime, Duration, Utc};","highlight_start":34,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src\\lib.rs","byte_start":538,"byte_end":576,"line_start":14,"line_end":14,"column_start":1,"column_end":39,"is_primary":true,"text":[{"text":"use chrono::{DateTime, Duration, Utc};","highlight_start":1,"highlight_end":39}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused imports: `DateTime`, `Duration`, `Utc`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\lib.rs:14:14\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m14\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0muse chrono::{DateTime, Duration, Utc};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^\u001b[0m\n\n"}
{"message":"unused import: `std::ops::Add`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":6,"byte_end":19,"line_start":2,"line_end":2,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"use std::ops::Add;","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":2,"byte_end":20,"line_start":2,"line_end":2,"column_start":1,"column_end":19,"is_primary":true,"text":[{"text":"use std::ops::Add;","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `std::ops::Add`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:2:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0muse std::ops::Add;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unnecessary parentheses around assigned value","code":{"code":"unused_parens","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":2508,"byte_end":2509,"line_start":64,"line_end":64,"column_start":40,"column_end":41,"is_primary":true,"text":[{"text":"        totalSolarYieldInMinute_kwh += (get_solar_charging_amount_according_to_exact_time(&solarYields,solarChargeStartDate) / MINUTES_IN_HOUR as f32); ","highlight_start":40,"highlight_end":41}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\charging_scheduler.rs","byte_start":2618,"byte_end":2619,"line_start":64,"line_end":64,"column_start":150,"column_end":151,"is_primary":true,"text":[{"text":"        totalSolarYieldInMinute_kwh += (get_solar_charging_amount_according_to_exact_time(&solarYields,solarChargeStartDate) / MINUTES_IN_HOUR as f32); ","highlight_start":150,"highlight_end":151}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_parens)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove these parentheses","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":2508,"byte_end":2509,"line_start":64,"line_end":64,"column_start":40,"column_end":41,"is_primary":true,"text":[{"text":"        totalSolarYieldInMinute_kwh += (get_solar_charging_amount_according_to_exact_time(&solarYields,solarChargeStartDate) / MINUTES_IN_HOUR as f32); ","highlight_start":40,"highlight_end":41}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\charging_scheduler.rs","byte_start":2618,"byte_end":2619,"line_start":64,"line_end":64,"column_start":150,"column_end":151,"is_primary":true,"text":[{"text":"        totalSolarYieldInMinute_kwh += (get_solar_charging_amount_according_to_exact_time(&solarYields,solarChargeStartDate) / MINUTES_IN_HOUR as f32); ","highlight_start":150,"highlight_end":151}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unnecessary parentheses around assigned value\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:64:40\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m64\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| ...\u001b[0m\u001b[0mute_kwh += (get_solar_charging_amount_according_to_exact_time(&solarYields,solarChargeStartDate) / MINUTES_IN_HOUR as f32); \u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^\u001b[0m\u001b[0m                                                                                                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_parens)]` on by default\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove these parentheses\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m64\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m        totalSolarYieldInMinute_kwh += \u001b[0m\u001b[0m\u001b[38;5;9m(\u001b[0m\u001b[0mget_solar_charging_amount_according_to_exact_time(&solarYields,solarChargeStartDate) / MINUTES_IN_HOUR as f32\u001b[0m\u001b[0m\u001b[38;5;9m)\u001b[0m\u001b[0m; \u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m64\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m        totalSolarYieldInMinute_kwh += get_solar_charging_amount_according_to_exact_time(&solarYields,solarChargeStartDate) / MINUTES_IN_HOUR as f32; \u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\n\n"}
{"message":"unnecessary parentheses around assigned value","code":{"code":"unused_parens","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":7512,"byte_end":7513,"line_start":198,"line_end":198,"column_start":29,"column_end":30,"is_primary":true,"text":[{"text":"        marketPriceInMin += (get_market_price_for_exact_date(&spotPrices,currTime) / MINUTES_IN_HOUR as f32); ","highlight_start":29,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\charging_scheduler.rs","byte_start":7591,"byte_end":7592,"line_start":198,"line_end":198,"column_start":108,"column_end":109,"is_primary":true,"text":[{"text":"        marketPriceInMin += (get_market_price_for_exact_date(&spotPrices,currTime) / MINUTES_IN_HOUR as f32); ","highlight_start":108,"highlight_end":109}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove these parentheses","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":7512,"byte_end":7513,"line_start":198,"line_end":198,"column_start":29,"column_end":30,"is_primary":true,"text":[{"text":"        marketPriceInMin += (get_market_price_for_exact_date(&spotPrices,currTime) / MINUTES_IN_HOUR as f32); ","highlight_start":29,"highlight_end":30}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\charging_scheduler.rs","byte_start":7591,"byte_end":7592,"line_start":198,"line_end":198,"column_start":108,"column_end":109,"is_primary":true,"text":[{"text":"        marketPriceInMin += (get_market_price_for_exact_date(&spotPrices,currTime) / MINUTES_IN_HOUR as f32); ","highlight_start":108,"highlight_end":109}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unnecessary parentheses around assigned value\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:198:29\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m198\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        marketPriceInMin += (get_market_price_for_exact_date(&spotPrices,currTime) / MINUTES_IN_HOUR as f32); \u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^\u001b[0m\u001b[0m                                                                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove these parentheses\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m198\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m        marketPriceInMin += \u001b[0m\u001b[0m\u001b[38;5;9m(\u001b[0m\u001b[0mget_market_price_for_exact_date(&spotPrices,currTime) / MINUTES_IN_HOUR as f32\u001b[0m\u001b[0m\u001b[38;5;9m)\u001b[0m\u001b[0m; \u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m198\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m        marketPriceInMin += get_market_price_for_exact_date(&spotPrices,currTime) / MINUTES_IN_HOUR as f32; \u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\n\n"}
{"message":"unused import: `Duration`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\spot_price.rs","byte_start":116,"byte_end":124,"line_start":5,"line_end":5,"column_start":24,"column_end":32,"is_primary":true,"text":[{"text":"use chrono::{DateTime, Duration, Utc};","highlight_start":24,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src\\spot_price.rs","byte_start":114,"byte_end":124,"line_start":5,"line_end":5,"column_start":22,"column_end":32,"is_primary":true,"text":[{"text":"use chrono::{DateTime, Duration, Utc};","highlight_start":22,"highlight_end":32}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `Duration`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\spot_price.rs:5:24\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0muse chrono::{DateTime, Duration, Utc};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `std::cmp::Ordering`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\spot_price.rs","byte_start":137,"byte_end":155,"line_start":6,"line_end":6,"column_start":5,"column_end":23,"is_primary":true,"text":[{"text":"use std::cmp::Ordering;","highlight_start":5,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src\\spot_price.rs","byte_start":133,"byte_end":156,"line_start":6,"line_end":6,"column_start":1,"column_end":24,"is_primary":true,"text":[{"text":"use std::cmp::Ordering;","highlight_start":1,"highlight_end":24}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `std::cmp::Ordering`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\spot_price.rs:6:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0muse std::cmp::Ordering;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `std::env`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\solar_yield.rs","byte_start":495,"byte_end":503,"line_start":11,"line_end":11,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"use std::env;","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src\\solar_yield.rs","byte_start":491,"byte_end":504,"line_start":11,"line_end":11,"column_start":1,"column_end":14,"is_primary":true,"text":[{"text":"use std::env;","highlight_start":1,"highlight_end":14}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `std::env`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\solar_yield.rs:11:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m11\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0muse std::env;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `Duration`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\solar_yield.rs","byte_start":567,"byte_end":575,"line_start":13,"line_end":13,"column_start":24,"column_end":32,"is_primary":true,"text":[{"text":"use chrono::{DateTime, Duration, Utc};","highlight_start":24,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src\\solar_yield.rs","byte_start":565,"byte_end":575,"line_start":13,"line_end":13,"column_start":22,"column_end":32,"is_primary":true,"text":[{"text":"use chrono::{DateTime, Duration, Utc};","highlight_start":22,"highlight_end":32}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `Duration`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\solar_yield.rs:13:24\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m13\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0muse chrono::{DateTime, Duration, Utc};\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `reqwest`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\lib.rs","byte_start":1451,"byte_end":1458,"line_start":50,"line_end":50,"column_start":5,"column_end":12,"is_primary":true,"text":[{"text":"use reqwest; // 0.9.10","highlight_start":5,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src\\lib.rs","byte_start":1447,"byte_end":1459,"line_start":50,"line_end":50,"column_start":1,"column_end":13,"is_primary":true,"text":[{"text":"use reqwest; // 0.9.10","highlight_start":1,"highlight_end":13}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `reqwest`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\lib.rs:50:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m50\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0muse reqwest; // 0.9.10\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `serde_json::Value`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\lib.rs","byte_start":1477,"byte_end":1494,"line_start":52,"line_end":52,"column_start":5,"column_end":22,"is_primary":true,"text":[{"text":"use serde_json::Value; // 1.0.38","highlight_start":5,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src\\lib.rs","byte_start":1473,"byte_end":1495,"line_start":52,"line_end":52,"column_start":1,"column_end":23,"is_primary":true,"text":[{"text":"use serde_json::Value; // 1.0.38","highlight_start":1,"highlight_end":23}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `serde_json::Value`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\lib.rs:52:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m52\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0muse serde_json::Value; // 1.0.38\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `std::error::Error`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\lib.rs","byte_start":1515,"byte_end":1532,"line_start":55,"line_end":55,"column_start":5,"column_end":22,"is_primary":true,"text":[{"text":"use std::error::Error;","highlight_start":5,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src\\lib.rs","byte_start":1511,"byte_end":1533,"line_start":55,"line_end":55,"column_start":1,"column_end":23,"is_primary":true,"text":[{"text":"use std::error::Error;","highlight_start":1,"highlight_end":23}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `std::error::Error`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\lib.rs:55:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m55\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0muse std::error::Error;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused variable: `foundData`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":635,"byte_end":644,"line_start":22,"line_end":22,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"    let foundData : DateTime<Utc> = Utc::now();","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":635,"byte_end":644,"line_start":22,"line_end":22,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"    let foundData : DateTime<Utc> = Utc::now();","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":"_foundData","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `foundData`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:22:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    let foundData : DateTime<Utc> = Utc::now();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_foundData`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}
{"message":"unused variable: `startSolarChargeTime`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":688,"byte_end":708,"line_start":23,"line_end":23,"column_start":13,"column_end":33,"is_primary":true,"text":[{"text":"    let mut startSolarChargeTime = leaveDate.clone();","highlight_start":13,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":688,"byte_end":708,"line_start":23,"line_end":23,"column_start":13,"column_end":33,"is_primary":true,"text":[{"text":"    let mut startSolarChargeTime = leaveDate.clone();","highlight_start":13,"highlight_end":33}],"label":null,"suggested_replacement":"_startSolarChargeTime","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `startSolarChargeTime`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:23:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    let mut startSolarChargeTime = leaveDate.clone();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_startSolarChargeTime`\u001b[0m\n\n"}
{"message":"value assigned to `currDesiredStateOfCharge` is never read","code":{"code":"unused_assignments","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":1469,"byte_end":1493,"line_start":36,"line_end":36,"column_start":9,"column_end":33,"is_primary":true,"text":[{"text":"        currDesiredStateOfCharge = vehicleBattery.get_current_state();","highlight_start":9,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_assignments)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"maybe it is overwritten before being read?","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: value assigned to `currDesiredStateOfCharge` is never read\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:36:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m36\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        currDesiredStateOfCharge = vehicleBattery.get_current_state();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_assignments)]` on by default\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: maybe it is overwritten before being read?\u001b[0m\n\n"}
{"message":"value assigned to `currDesiredStateOfCharge` is never read","code":{"code":"unused_assignments","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":1557,"byte_end":1581,"line_start":40,"line_end":40,"column_start":9,"column_end":33,"is_primary":true,"text":[{"text":"        currDesiredStateOfCharge = currDesiredStateOfCharge - batteryPercentageContributionOfSolarCharging as u8;","highlight_start":9,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"maybe it is overwritten before being read?","code":null,"level":"help","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: value assigned to `currDesiredStateOfCharge` is never read\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:40:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        currDesiredStateOfCharge = currDesiredStateOfCharge - batteryPercentageContributionOfSolarCharging as u8;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mhelp\u001b[0m\u001b[0m: maybe it is overwritten before being read?\u001b[0m\n\n"}
{"message":"unused variable: `i`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":2389,"byte_end":2390,"line_start":61,"line_end":61,"column_start":9,"column_end":10,"is_primary":true,"text":[{"text":"    for i in 0..estimatedTravelDurationInMinues{","highlight_start":9,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":2389,"byte_end":2390,"line_start":61,"line_end":61,"column_start":9,"column_end":10,"is_primary":true,"text":[{"text":"    for i in 0..estimatedTravelDurationInMinues{","highlight_start":9,"highlight_end":10}],"label":null,"suggested_replacement":"_i","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `i`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:61:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m61\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    for i in 0..estimatedTravelDurationInMinues{\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_i`\u001b[0m\n\n"}
{"message":"unused variable: `foundData`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":3942,"byte_end":3951,"line_start":109,"line_end":109,"column_start":13,"column_end":22,"is_primary":true,"text":[{"text":"    let mut foundData : DateTime<Utc> = Utc::now();","highlight_start":13,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":3942,"byte_end":3951,"line_start":109,"line_end":109,"column_start":13,"column_end":22,"is_primary":true,"text":[{"text":"    let mut foundData : DateTime<Utc> = Utc::now();","highlight_start":13,"highlight_end":22}],"label":null,"suggested_replacement":"_foundData","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `foundData`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:109:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m109\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    let mut foundData : DateTime<Utc> = Utc::now();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_foundData`\u001b[0m\n\n"}
{"message":"unused variable: `i`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":7418,"byte_end":7419,"line_start":195,"line_end":195,"column_start":9,"column_end":10,"is_primary":true,"text":[{"text":"    for i in 0..durationInMinutes{","highlight_start":9,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":7418,"byte_end":7419,"line_start":195,"line_end":195,"column_start":9,"column_end":10,"is_primary":true,"text":[{"text":"    for i in 0..durationInMinutes{","highlight_start":9,"highlight_end":10}],"label":null,"suggested_replacement":"_i","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `i`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:195:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m195\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    for i in 0..durationInMinutes{\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_i`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":684,"byte_end":708,"line_start":23,"line_end":23,"column_start":9,"column_end":33,"is_primary":true,"text":[{"text":"    let mut startSolarChargeTime = leaveDate.clone();","highlight_start":9,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_mut)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":684,"byte_end":688,"line_start":23,"line_end":23,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"    let mut startSolarChargeTime = leaveDate.clone();","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable does not need to be mutable\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:23:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    let mut startSolarChargeTime = leaveDate.clone();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mhelp: remove this `mut`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_mut)]` on by default\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":3938,"byte_end":3951,"line_start":109,"line_end":109,"column_start":9,"column_end":22,"is_primary":true,"text":[{"text":"    let mut foundData : DateTime<Utc> = Utc::now();","highlight_start":9,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":3938,"byte_end":3942,"line_start":109,"line_end":109,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"    let mut foundData : DateTime<Utc> = Utc::now();","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable does not need to be mutable\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:109:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m109\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    let mut foundData : DateTime<Utc> = Utc::now();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":4442,"byte_end":4469,"line_start":125,"line_end":125,"column_start":9,"column_end":36,"is_primary":true,"text":[{"text":"    let mut neededBatteryPercantage:u8 = desiredStateOfCharge - vehicleBattery.get_current_state() ;","highlight_start":9,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":4442,"byte_end":4446,"line_start":125,"line_end":125,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"    let mut neededBatteryPercantage:u8 = desiredStateOfCharge - vehicleBattery.get_current_state() ;","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable does not need to be mutable\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:125:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m125\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    let mut neededBatteryPercantage:u8 = desiredStateOfCharge - vehicleBattery.get_current_state() ;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":4546,"byte_end":4577,"line_start":127,"line_end":127,"column_start":9,"column_end":40,"is_primary":true,"text":[{"text":"    let mut vehicleChargingCapacity_kWh = ((vehicleBattery.get_phase_count() * vehicleBattery.get_volt() * vehicleBattery.get_amper())) as f32 / 1000.0_f32;","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":4546,"byte_end":4550,"line_start":127,"line_end":127,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"    let mut vehicleChargingCapacity_kWh = ((vehicleBattery.get_phase_count() * vehicleBattery.get_volt() * vehicleBattery.get_amper())) as f32 / 1000.0_f32;","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable does not need to be mutable\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:127:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m127\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    let mut vehicleChargingCapacity_kWh = ((vehicleBattery.get_phase_count() * vehicleBattery.get_volt() * vehicleBattery.get_amper())) a\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":4776,"byte_end":4820,"line_start":130,"line_end":130,"column_start":9,"column_end":53,"is_primary":true,"text":[{"text":"    let mut neededCapacitykWhWithEfficiencyParameter : f32 = (( vehicleBattery.capacity as f32 / 100.0_f32 )  * neededBatteryPercantage as f32) /  vehicleBattery.get_efficiency();","highlight_start":9,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":4776,"byte_end":4780,"line_start":130,"line_end":130,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"    let mut neededCapacitykWhWithEfficiencyParameter : f32 = (( vehicleBattery.capacity as f32 / 100.0_f32 )  * neededBatteryPercantage as f32) /  vehicleBattery.get_efficiency();","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable does not need to be mutable\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:130:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m130\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    let mut neededCapacitykWhWithEfficiencyParameter : f32 = (( vehicleBattery.capacity as f32 / 100.0_f32 )  * neededBatteryPercantage a\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":7181,"byte_end":7192,"line_start":187,"line_end":187,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"    let mut endTime = startDate + Duration::minutes(durationInMinutes);","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":7181,"byte_end":7185,"line_start":187,"line_end":187,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"    let mut endTime = startDate + Duration::minutes(durationInMinutes);","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable does not need to be mutable\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:187:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m187\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    let mut endTime = startDate + Duration::minutes(durationInMinutes);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"associated function is never used: `new`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src\\battery.rs","byte_start":436,"byte_end":439,"line_start":22,"line_end":22,"column_start":8,"column_end":11,"is_primary":true,"text":[{"text":"    fn new()-> Self{","highlight_start":8,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(dead_code)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: associated function is never used: `new`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\battery.rs:22:8\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    fn new()-> Self{\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(dead_code)]` on by default\u001b[0m\n\n"}
{"message":"variable `vehicleBattery` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":405,"byte_end":419,"line_start":20,"line_end":20,"column_start":55,"column_end":69,"is_primary":true,"text":[{"text":"pub fn get_best_time_for_charging_include_solar_power(vehicleBattery:&Battery,currDate:DateTime<Utc>, leaveDate:DateTime<Utc>, desiredStateOfCharge:u8, spotPrices:&SpotPrices, solarYields:&SolarYields,estimatedTravelDurationInMinues : i32)-> ((DateTime<Utc>,f32,i64),f32)","highlight_start":55,"highlight_end":69}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(non_snake_case)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":405,"byte_end":419,"line_start":20,"line_end":20,"column_start":55,"column_end":69,"is_primary":true,"text":[{"text":"pub fn get_best_time_for_charging_include_solar_power(vehicleBattery:&Battery,currDate:DateTime<Utc>, leaveDate:DateTime<Utc>, desiredStateOfCharge:u8, spotPrices:&SpotPrices, solarYields:&SolarYields,estimatedTravelDurationInMinues : i32)-> ((DateTime<Utc>,f32,i64),f32)","highlight_start":55,"highlight_end":69}],"label":null,"suggested_replacement":"vehicle_battery","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `vehicleBattery` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:20:55\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0mpub fn get_best_time_for_charging_include_solar_power(vehicleBattery:&Battery,currDate:DateTime<Utc>, leaveDate:DateTime<Utc>, desiredSta\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `vehicle_battery`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(non_snake_case)]` on by default\u001b[0m\n\n"}
{"message":"variable `currDate` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":429,"byte_end":437,"line_start":20,"line_end":20,"column_start":79,"column_end":87,"is_primary":true,"text":[{"text":"pub fn get_best_time_for_charging_include_solar_power(vehicleBattery:&Battery,currDate:DateTime<Utc>, leaveDate:DateTime<Utc>, desiredStateOfCharge:u8, spotPrices:&SpotPrices, solarYields:&SolarYields,estimatedTravelDurationInMinues : i32)-> ((DateTime<Utc>,f32,i64),f32)","highlight_start":79,"highlight_end":87}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":429,"byte_end":437,"line_start":20,"line_end":20,"column_start":79,"column_end":87,"is_primary":true,"text":[{"text":"pub fn get_best_time_for_charging_include_solar_power(vehicleBattery:&Battery,currDate:DateTime<Utc>, leaveDate:DateTime<Utc>, desiredStateOfCharge:u8, spotPrices:&SpotPrices, solarYields:&SolarYields,estimatedTravelDurationInMinues : i32)-> ((DateTime<Utc>,f32,i64),f32)","highlight_start":79,"highlight_end":87}],"label":null,"suggested_replacement":"curr_date","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `currDate` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:20:79\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| ...\u001b[0m\u001b[0molar_power(vehicleBattery:&Battery,currDate:DateTime<Utc>, leaveDate:DateTime<Utc>, desiredStateOfCharge:u8, spotPrices:&SpotPrices, s\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `curr_date`\u001b[0m\n\n"}
{"message":"variable `leaveDate` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":453,"byte_end":462,"line_start":20,"line_end":20,"column_start":103,"column_end":112,"is_primary":true,"text":[{"text":"pub fn get_best_time_for_charging_include_solar_power(vehicleBattery:&Battery,currDate:DateTime<Utc>, leaveDate:DateTime<Utc>, desiredStateOfCharge:u8, spotPrices:&SpotPrices, solarYields:&SolarYields,estimatedTravelDurationInMinues : i32)-> ((DateTime<Utc>,f32,i64),f32)","highlight_start":103,"highlight_end":112}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":453,"byte_end":462,"line_start":20,"line_end":20,"column_start":103,"column_end":112,"is_primary":true,"text":[{"text":"pub fn get_best_time_for_charging_include_solar_power(vehicleBattery:&Battery,currDate:DateTime<Utc>, leaveDate:DateTime<Utc>, desiredStateOfCharge:u8, spotPrices:&SpotPrices, solarYields:&SolarYields,estimatedTravelDurationInMinues : i32)-> ((DateTime<Utc>,f32,i64),f32)","highlight_start":103,"highlight_end":112}],"label":null,"suggested_replacement":"leave_date","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `leaveDate` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:20:103\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| ...\u001b[0m\u001b[0m:&Battery,currDate:DateTime<Utc>, leaveDate:DateTime<Utc>, desiredStateOfCharge:u8, spotPrices:&SpotPrices, solarYields:&SolarYields,e\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `leave_date`\u001b[0m\n\n"}
{"message":"variable `desiredStateOfCharge` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":478,"byte_end":498,"line_start":20,"line_end":20,"column_start":128,"column_end":148,"is_primary":true,"text":[{"text":"pub fn get_best_time_for_charging_include_solar_power(vehicleBattery:&Battery,currDate:DateTime<Utc>, leaveDate:DateTime<Utc>, desiredStateOfCharge:u8, spotPrices:&SpotPrices, solarYields:&SolarYields,estimatedTravelDurationInMinues : i32)-> ((DateTime<Utc>,f32,i64),f32)","highlight_start":128,"highlight_end":148}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":478,"byte_end":498,"line_start":20,"line_end":20,"column_start":128,"column_end":148,"is_primary":true,"text":[{"text":"pub fn get_best_time_for_charging_include_solar_power(vehicleBattery:&Battery,currDate:DateTime<Utc>, leaveDate:DateTime<Utc>, desiredStateOfCharge:u8, spotPrices:&SpotPrices, solarYields:&SolarYields,estimatedTravelDurationInMinues : i32)-> ((DateTime<Utc>,f32,i64),f32)","highlight_start":128,"highlight_end":148}],"label":null,"suggested_replacement":"desired_state_of_charge","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `desiredStateOfCharge` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:20:128\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| ...\u001b[0m\u001b[0mveDate:DateTime<Utc>, desiredStateOfCharge:u8, spotPrices:&SpotPrices, solarYields:&SolarYields,estimatedTravelDurationInMinues : i32)\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `desired_state_of_charge`\u001b[0m\n\n"}
{"message":"variable `spotPrices` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":503,"byte_end":513,"line_start":20,"line_end":20,"column_start":153,"column_end":163,"is_primary":true,"text":[{"text":"pub fn get_best_time_for_charging_include_solar_power(vehicleBattery:&Battery,currDate:DateTime<Utc>, leaveDate:DateTime<Utc>, desiredStateOfCharge:u8, spotPrices:&SpotPrices, solarYields:&SolarYields,estimatedTravelDurationInMinues : i32)-> ((DateTime<Utc>,f32,i64),f32)","highlight_start":153,"highlight_end":163}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":503,"byte_end":513,"line_start":20,"line_end":20,"column_start":153,"column_end":163,"is_primary":true,"text":[{"text":"pub fn get_best_time_for_charging_include_solar_power(vehicleBattery:&Battery,currDate:DateTime<Utc>, leaveDate:DateTime<Utc>, desiredStateOfCharge:u8, spotPrices:&SpotPrices, solarYields:&SolarYields,estimatedTravelDurationInMinues : i32)-> ((DateTime<Utc>,f32,i64),f32)","highlight_start":153,"highlight_end":163}],"label":null,"suggested_replacement":"spot_prices","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `spotPrices` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:20:153\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| ...\u001b[0m\u001b[0me<Utc>, desiredStateOfCharge:u8, spotPrices:&SpotPrices, solarYields:&SolarYields,estimatedTravelDurationInMinues : i32)-> ((DateTime<\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `spot_prices`\u001b[0m\n\n"}
{"message":"variable `solarYields` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":527,"byte_end":538,"line_start":20,"line_end":20,"column_start":177,"column_end":188,"is_primary":true,"text":[{"text":"pub fn get_best_time_for_charging_include_solar_power(vehicleBattery:&Battery,currDate:DateTime<Utc>, leaveDate:DateTime<Utc>, desiredStateOfCharge:u8, spotPrices:&SpotPrices, solarYields:&SolarYields,estimatedTravelDurationInMinues : i32)-> ((DateTime<Utc>,f32,i64),f32)","highlight_start":177,"highlight_end":188}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":527,"byte_end":538,"line_start":20,"line_end":20,"column_start":177,"column_end":188,"is_primary":true,"text":[{"text":"pub fn get_best_time_for_charging_include_solar_power(vehicleBattery:&Battery,currDate:DateTime<Utc>, leaveDate:DateTime<Utc>, desiredStateOfCharge:u8, spotPrices:&SpotPrices, solarYields:&SolarYields,estimatedTravelDurationInMinues : i32)-> ((DateTime<Utc>,f32,i64),f32)","highlight_start":177,"highlight_end":188}],"label":null,"suggested_replacement":"solar_yields","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `solarYields` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:20:177\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| ...\u001b[0m\u001b[0mrge:u8, spotPrices:&SpotPrices, solarYields:&SolarYields,estimatedTravelDurationInMinues : i32)-> ((DateTime<Utc>,f32,i64),f32)\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `solar_yields`\u001b[0m\n\n"}
{"message":"variable `estimatedTravelDurationInMinues` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":552,"byte_end":583,"line_start":20,"line_end":20,"column_start":202,"column_end":233,"is_primary":true,"text":[{"text":"pub fn get_best_time_for_charging_include_solar_power(vehicleBattery:&Battery,currDate:DateTime<Utc>, leaveDate:DateTime<Utc>, desiredStateOfCharge:u8, spotPrices:&SpotPrices, solarYields:&SolarYields,estimatedTravelDurationInMinues : i32)-> ((DateTime<Utc>,f32,i64),f32)","highlight_start":202,"highlight_end":233}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":552,"byte_end":583,"line_start":20,"line_end":20,"column_start":202,"column_end":233,"is_primary":true,"text":[{"text":"pub fn get_best_time_for_charging_include_solar_power(vehicleBattery:&Battery,currDate:DateTime<Utc>, leaveDate:DateTime<Utc>, desiredStateOfCharge:u8, spotPrices:&SpotPrices, solarYields:&SolarYields,estimatedTravelDurationInMinues : i32)-> ((DateTime<Utc>,f32,i64),f32)","highlight_start":202,"highlight_end":233}],"label":null,"suggested_replacement":"estimated_travel_duration_in_minues","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `estimatedTravelDurationInMinues` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:20:202\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| ...\u001b[0m\u001b[0mlarYields,estimatedTravelDurationInMinues : i32)-> ((DateTime<Utc>,f32,i64),f32)\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `estimated_travel_duration_in_minues`\u001b[0m\n\n"}
{"message":"variable `foundData` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":635,"byte_end":644,"line_start":22,"line_end":22,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"    let foundData : DateTime<Utc> = Utc::now();","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":635,"byte_end":644,"line_start":22,"line_end":22,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"    let foundData : DateTime<Utc> = Utc::now();","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":"found_data","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `foundData` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:22:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    let foundData : DateTime<Utc> = Utc::now();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `found_data`\u001b[0m\n\n"}
{"message":"variable `startSolarChargeTime` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":688,"byte_end":708,"line_start":23,"line_end":23,"column_start":13,"column_end":33,"is_primary":true,"text":[{"text":"    let mut startSolarChargeTime = leaveDate.clone();","highlight_start":13,"highlight_end":33}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":688,"byte_end":708,"line_start":23,"line_end":23,"column_start":13,"column_end":33,"is_primary":true,"text":[{"text":"    let mut startSolarChargeTime = leaveDate.clone();","highlight_start":13,"highlight_end":33}],"label":null,"suggested_replacement":"start_solar_charge_time","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `startSolarChargeTime` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:23:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m23\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    let mut startSolarChargeTime = leaveDate.clone();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `start_solar_charge_time`\u001b[0m\n\n"}
{"message":"variable `currDesiredStateOfCharge` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":743,"byte_end":767,"line_start":24,"line_end":24,"column_start":13,"column_end":37,"is_primary":true,"text":[{"text":"    let mut currDesiredStateOfCharge = desiredStateOfCharge;","highlight_start":13,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":743,"byte_end":767,"line_start":24,"line_end":24,"column_start":13,"column_end":37,"is_primary":true,"text":[{"text":"    let mut currDesiredStateOfCharge = desiredStateOfCharge;","highlight_start":13,"highlight_end":37}],"label":null,"suggested_replacement":"curr_desired_state_of_charge","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `currDesiredStateOfCharge` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:24:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m24\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    let mut currDesiredStateOfCharge = desiredStateOfCharge;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `curr_desired_state_of_charge`\u001b[0m\n\n"}
{"message":"variable `estimatedSolarYield_kwh` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":852,"byte_end":875,"line_start":28,"line_end":28,"column_start":9,"column_end":32,"is_primary":true,"text":[{"text":"    let estimatedSolarYield_kwh = calculate_solar_charging_during_travel_in_kwh(vehicleBattery,&solarYields,estimatedTravelDurationInMinues,leaveDate);","highlight_start":9,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":852,"byte_end":875,"line_start":28,"line_end":28,"column_start":9,"column_end":32,"is_primary":true,"text":[{"text":"    let estimatedSolarYield_kwh = calculate_solar_charging_during_travel_in_kwh(vehicleBattery,&solarYields,estimatedTravelDurationInMinues,leaveDate);","highlight_start":9,"highlight_end":32}],"label":null,"suggested_replacement":"estimated_solar_yield_kwh","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `estimatedSolarYield_kwh` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:28:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m28\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    let estimatedSolarYield_kwh = calculate_solar_charging_during_travel_in_kwh(vehicleBattery,&solarYields,estimatedTravelDurationInMinu\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `estimated_solar_yield_kwh`\u001b[0m\n\n"}
{"message":"variable `batteryPercentageContributionOfSolarCharging` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":1088,"byte_end":1132,"line_start":31,"line_end":31,"column_start":9,"column_end":53,"is_primary":true,"text":[{"text":"    let batteryPercentageContributionOfSolarCharging = (100.0 * estimatedSolarYield_kwh) / vehicleBattery.capacity as f32;","highlight_start":9,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":1088,"byte_end":1132,"line_start":31,"line_end":31,"column_start":9,"column_end":53,"is_primary":true,"text":[{"text":"    let batteryPercentageContributionOfSolarCharging = (100.0 * estimatedSolarYield_kwh) / vehicleBattery.capacity as f32;","highlight_start":9,"highlight_end":53}],"label":null,"suggested_replacement":"battery_percentage_contribution_of_solar_charging","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `batteryPercentageContributionOfSolarCharging` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:31:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m31\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    let batteryPercentageContributionOfSolarCharging = (100.0 * estimatedSolarYield_kwh) / vehicleBattery.capacity as f32;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `battery_percentage_contribution_of_solar_charging`\u001b[0m\n\n"}
{"message":"variable `vehicleBattery` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":2013,"byte_end":2027,"line_start":51,"line_end":51,"column_start":50,"column_end":64,"is_primary":true,"text":[{"text":"fn calculate_solar_charging_during_travel_in_kwh(vehicleBattery:&Battery,solarYields:&SolarYields,estimatedTravelDurationInMinues : i32,solarChargeStartDate:DateTime<Utc>) -> f32","highlight_start":50,"highlight_end":64}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":2013,"byte_end":2027,"line_start":51,"line_end":51,"column_start":50,"column_end":64,"is_primary":true,"text":[{"text":"fn calculate_solar_charging_during_travel_in_kwh(vehicleBattery:&Battery,solarYields:&SolarYields,estimatedTravelDurationInMinues : i32,solarChargeStartDate:DateTime<Utc>) -> f32","highlight_start":50,"highlight_end":64}],"label":null,"suggested_replacement":"vehicle_battery","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `vehicleBattery` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:51:50\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m51\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0mfn calculate_solar_charging_during_travel_in_kwh(vehicleBattery:&Battery,solarYields:&SolarYields,estimatedTravelDurationInMinues : i32,s\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `vehicle_battery`\u001b[0m\n\n"}
{"message":"variable `solarYields` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":2037,"byte_end":2048,"line_start":51,"line_end":51,"column_start":74,"column_end":85,"is_primary":true,"text":[{"text":"fn calculate_solar_charging_during_travel_in_kwh(vehicleBattery:&Battery,solarYields:&SolarYields,estimatedTravelDurationInMinues : i32,solarChargeStartDate:DateTime<Utc>) -> f32","highlight_start":74,"highlight_end":85}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":2037,"byte_end":2048,"line_start":51,"line_end":51,"column_start":74,"column_end":85,"is_primary":true,"text":[{"text":"fn calculate_solar_charging_during_travel_in_kwh(vehicleBattery:&Battery,solarYields:&SolarYields,estimatedTravelDurationInMinues : i32,solarChargeStartDate:DateTime<Utc>) -> f32","highlight_start":74,"highlight_end":85}],"label":null,"suggested_replacement":"solar_yields","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `solarYields` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:51:74\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m51\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| ...\u001b[0m\u001b[0m_in_kwh(vehicleBattery:&Battery,solarYields:&SolarYields,estimatedTravelDurationInMinues : i32,solarChargeStartDate:DateTime<Utc>) -> f32\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `solar_yields`\u001b[0m\n\n"}
{"message":"variable `estimatedTravelDurationInMinues` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":2062,"byte_end":2093,"line_start":51,"line_end":51,"column_start":99,"column_end":130,"is_primary":true,"text":[{"text":"fn calculate_solar_charging_during_travel_in_kwh(vehicleBattery:&Battery,solarYields:&SolarYields,estimatedTravelDurationInMinues : i32,solarChargeStartDate:DateTime<Utc>) -> f32","highlight_start":99,"highlight_end":130}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":2062,"byte_end":2093,"line_start":51,"line_end":51,"column_start":99,"column_end":130,"is_primary":true,"text":[{"text":"fn calculate_solar_charging_during_travel_in_kwh(vehicleBattery:&Battery,solarYields:&SolarYields,estimatedTravelDurationInMinues : i32,solarChargeStartDate:DateTime<Utc>) -> f32","highlight_start":99,"highlight_end":130}],"label":null,"suggested_replacement":"estimated_travel_duration_in_minues","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `estimatedTravelDurationInMinues` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:51:99\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m51\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| ...\u001b[0m\u001b[0mlarYields,estimatedTravelDurationInMinues : i32,solarChargeStartDate:DateTime<Utc>) -> f32\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `estimated_travel_duration_in_minues`\u001b[0m\n\n"}
{"message":"variable `solarChargeStartDate` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":2100,"byte_end":2120,"line_start":51,"line_end":51,"column_start":137,"column_end":157,"is_primary":true,"text":[{"text":"fn calculate_solar_charging_during_travel_in_kwh(vehicleBattery:&Battery,solarYields:&SolarYields,estimatedTravelDurationInMinues : i32,solarChargeStartDate:DateTime<Utc>) -> f32","highlight_start":137,"highlight_end":157}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":2100,"byte_end":2120,"line_start":51,"line_end":51,"column_start":137,"column_end":157,"is_primary":true,"text":[{"text":"fn calculate_solar_charging_during_travel_in_kwh(vehicleBattery:&Battery,solarYields:&SolarYields,estimatedTravelDurationInMinues : i32,solarChargeStartDate:DateTime<Utc>) -> f32","highlight_start":137,"highlight_end":157}],"label":null,"suggested_replacement":"solar_charge_start_date","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `solarChargeStartDate` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:51:137\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m51\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| ...\u001b[0m\u001b[0murationInMinues : i32,solarChargeStartDate:DateTime<Utc>) -> f32\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `solar_charge_start_date`\u001b[0m\n\n"}
{"message":"variable `totalSolarYieldInMinute_kwh` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":2163,"byte_end":2190,"line_start":54,"line_end":54,"column_start":13,"column_end":40,"is_primary":true,"text":[{"text":"    let mut totalSolarYieldInMinute_kwh:f32 = 0_f32;","highlight_start":13,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":2163,"byte_end":2190,"line_start":54,"line_end":54,"column_start":13,"column_end":40,"is_primary":true,"text":[{"text":"    let mut totalSolarYieldInMinute_kwh:f32 = 0_f32;","highlight_start":13,"highlight_end":40}],"label":null,"suggested_replacement":"total_solar_yield_in_minute_kwh","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `totalSolarYieldInMinute_kwh` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:54:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m54\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    let mut totalSolarYieldInMinute_kwh:f32 = 0_f32;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `total_solar_yield_in_minute_kwh`\u001b[0m\n\n"}
{"message":"variable `currTime` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":2217,"byte_end":2225,"line_start":55,"line_end":55,"column_start":13,"column_end":21,"is_primary":true,"text":[{"text":"    let mut currTime = solarChargeStartDate.clone();","highlight_start":13,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":2217,"byte_end":2225,"line_start":55,"line_end":55,"column_start":13,"column_end":21,"is_primary":true,"text":[{"text":"    let mut currTime = solarChargeStartDate.clone();","highlight_start":13,"highlight_end":21}],"label":null,"suggested_replacement":"curr_time","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `currTime` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:55:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m55\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    let mut currTime = solarChargeStartDate.clone();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `curr_time`\u001b[0m\n\n"}
{"message":"variable `solarYields` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":2947,"byte_end":2958,"line_start":80,"line_end":80,"column_start":54,"column_end":65,"is_primary":true,"text":[{"text":"fn get_solar_charging_amount_according_to_exact_time(solarYields:&SolarYields,givenDate:DateTime<Utc>) -> f32{","highlight_start":54,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":2947,"byte_end":2958,"line_start":80,"line_end":80,"column_start":54,"column_end":65,"is_primary":true,"text":[{"text":"fn get_solar_charging_amount_according_to_exact_time(solarYields:&SolarYields,givenDate:DateTime<Utc>) -> f32{","highlight_start":54,"highlight_end":65}],"label":null,"suggested_replacement":"solar_yields","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `solarYields` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:80:54\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m80\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0mfn get_solar_charging_amount_according_to_exact_time(solarYields:&SolarYields,givenDate:DateTime<Utc>) -> f32{\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `solar_yields`\u001b[0m\n\n"}
{"message":"variable `givenDate` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":2972,"byte_end":2981,"line_start":80,"line_end":80,"column_start":79,"column_end":88,"is_primary":true,"text":[{"text":"fn get_solar_charging_amount_according_to_exact_time(solarYields:&SolarYields,givenDate:DateTime<Utc>) -> f32{","highlight_start":79,"highlight_end":88}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":2972,"byte_end":2981,"line_start":80,"line_end":80,"column_start":79,"column_end":88,"is_primary":true,"text":[{"text":"fn get_solar_charging_amount_according_to_exact_time(solarYields:&SolarYields,givenDate:DateTime<Utc>) -> f32{","highlight_start":79,"highlight_end":88}],"label":null,"suggested_replacement":"given_date","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `givenDate` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:80:79\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m80\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0mfn get_solar_charging_amount_according_to_exact_time(solarYields:&SolarYields,givenDate:DateTime<Utc>) -> f32{\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                                                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `given_date`\u001b[0m\n\n"}
{"message":"variable `solarYield` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":3016,"byte_end":3026,"line_start":82,"line_end":82,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"    let solarYield = 0_f32;","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":3016,"byte_end":3026,"line_start":82,"line_end":82,"column_start":9,"column_end":19,"is_primary":true,"text":[{"text":"    let solarYield = 0_f32;","highlight_start":9,"highlight_end":19}],"label":null,"suggested_replacement":"solar_yield","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `solarYield` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:82:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m82\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    let solarYield = 0_f32;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `solar_yield`\u001b[0m\n\n"}
{"message":"variable `vehicleBattery` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":3774,"byte_end":3788,"line_start":106,"line_end":106,"column_start":49,"column_end":63,"is_primary":true,"text":[{"text":"pub fn get_best_to_time_start_for_grid_charging(vehicleBattery:&Battery,currDate:DateTime<Utc>, travelDate:DateTime<Utc>, desiredStateOfCharge:u8, spotPrices:&SpotPrices) -> (DateTime<Utc>,f32,i64)","highlight_start":49,"highlight_end":63}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":3774,"byte_end":3788,"line_start":106,"line_end":106,"column_start":49,"column_end":63,"is_primary":true,"text":[{"text":"pub fn get_best_to_time_start_for_grid_charging(vehicleBattery:&Battery,currDate:DateTime<Utc>, travelDate:DateTime<Utc>, desiredStateOfCharge:u8, spotPrices:&SpotPrices) -> (DateTime<Utc>,f32,i64)","highlight_start":49,"highlight_end":63}],"label":null,"suggested_replacement":"vehicle_battery","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `vehicleBattery` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:106:49\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m106\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0mpub fn get_best_to_time_start_for_grid_charging(vehicleBattery:&Battery,currDate:DateTime<Utc>, travelDate:DateTime<Utc>, desiredStateOfC\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                                \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `vehicle_battery`\u001b[0m\n\n"}
{"message":"variable `currDate` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":3798,"byte_end":3806,"line_start":106,"line_end":106,"column_start":73,"column_end":81,"is_primary":true,"text":[{"text":"pub fn get_best_to_time_start_for_grid_charging(vehicleBattery:&Battery,currDate:DateTime<Utc>, travelDate:DateTime<Utc>, desiredStateOfCharge:u8, spotPrices:&SpotPrices) -> (DateTime<Utc>,f32,i64)","highlight_start":73,"highlight_end":81}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":3798,"byte_end":3806,"line_start":106,"line_end":106,"column_start":73,"column_end":81,"is_primary":true,"text":[{"text":"pub fn get_best_to_time_start_for_grid_charging(vehicleBattery:&Battery,currDate:DateTime<Utc>, travelDate:DateTime<Utc>, desiredStateOfCharge:u8, spotPrices:&SpotPrices) -> (DateTime<Utc>,f32,i64)","highlight_start":73,"highlight_end":81}],"label":null,"suggested_replacement":"curr_date","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `currDate` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:106:73\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m106\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| ...\u001b[0m\u001b[0md_charging(vehicleBattery:&Battery,currDate:DateTime<Utc>, travelDate:DateTime<Utc>, desiredStateOfCharge:u8, spotPrices:&SpotPrices) \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `curr_date`\u001b[0m\n\n"}
{"message":"variable `travelDate` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":3822,"byte_end":3832,"line_start":106,"line_end":106,"column_start":97,"column_end":107,"is_primary":true,"text":[{"text":"pub fn get_best_to_time_start_for_grid_charging(vehicleBattery:&Battery,currDate:DateTime<Utc>, travelDate:DateTime<Utc>, desiredStateOfCharge:u8, spotPrices:&SpotPrices) -> (DateTime<Utc>,f32,i64)","highlight_start":97,"highlight_end":107}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":3822,"byte_end":3832,"line_start":106,"line_end":106,"column_start":97,"column_end":107,"is_primary":true,"text":[{"text":"pub fn get_best_to_time_start_for_grid_charging(vehicleBattery:&Battery,currDate:DateTime<Utc>, travelDate:DateTime<Utc>, desiredStateOfCharge:u8, spotPrices:&SpotPrices) -> (DateTime<Utc>,f32,i64)","highlight_start":97,"highlight_end":107}],"label":null,"suggested_replacement":"travel_date","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `travelDate` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:106:97\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m106\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| ...\u001b[0m\u001b[0m&Battery,currDate:DateTime<Utc>, travelDate:DateTime<Utc>, desiredStateOfCharge:u8, spotPrices:&SpotPrices) -> (DateTime<Utc>,f32,i64)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `travel_date`\u001b[0m\n\n"}
{"message":"variable `desiredStateOfCharge` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":3848,"byte_end":3868,"line_start":106,"line_end":106,"column_start":123,"column_end":143,"is_primary":true,"text":[{"text":"pub fn get_best_to_time_start_for_grid_charging(vehicleBattery:&Battery,currDate:DateTime<Utc>, travelDate:DateTime<Utc>, desiredStateOfCharge:u8, spotPrices:&SpotPrices) -> (DateTime<Utc>,f32,i64)","highlight_start":123,"highlight_end":143}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":3848,"byte_end":3868,"line_start":106,"line_end":106,"column_start":123,"column_end":143,"is_primary":true,"text":[{"text":"pub fn get_best_to_time_start_for_grid_charging(vehicleBattery:&Battery,currDate:DateTime<Utc>, travelDate:DateTime<Utc>, desiredStateOfCharge:u8, spotPrices:&SpotPrices) -> (DateTime<Utc>,f32,i64)","highlight_start":123,"highlight_end":143}],"label":null,"suggested_replacement":"desired_state_of_charge","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `desiredStateOfCharge` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:106:123\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m106\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| ...\u001b[0m\u001b[0melDate:DateTime<Utc>, desiredStateOfCharge:u8, spotPrices:&SpotPrices) -> (DateTime<Utc>,f32,i64)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `desired_state_of_charge`\u001b[0m\n\n"}
{"message":"variable `spotPrices` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":3873,"byte_end":3883,"line_start":106,"line_end":106,"column_start":148,"column_end":158,"is_primary":true,"text":[{"text":"pub fn get_best_to_time_start_for_grid_charging(vehicleBattery:&Battery,currDate:DateTime<Utc>, travelDate:DateTime<Utc>, desiredStateOfCharge:u8, spotPrices:&SpotPrices) -> (DateTime<Utc>,f32,i64)","highlight_start":148,"highlight_end":158}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":3873,"byte_end":3883,"line_start":106,"line_end":106,"column_start":148,"column_end":158,"is_primary":true,"text":[{"text":"pub fn get_best_to_time_start_for_grid_charging(vehicleBattery:&Battery,currDate:DateTime<Utc>, travelDate:DateTime<Utc>, desiredStateOfCharge:u8, spotPrices:&SpotPrices) -> (DateTime<Utc>,f32,i64)","highlight_start":148,"highlight_end":158}],"label":null,"suggested_replacement":"spot_prices","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `spotPrices` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:106:148\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m106\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| ...\u001b[0m\u001b[0me<Utc>, desiredStateOfCharge:u8, spotPrices:&SpotPrices) -> (DateTime<Utc>,f32,i64)\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `spot_prices`\u001b[0m\n\n"}
{"message":"variable `foundData` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":3942,"byte_end":3951,"line_start":109,"line_end":109,"column_start":13,"column_end":22,"is_primary":true,"text":[{"text":"    let mut foundData : DateTime<Utc> = Utc::now();","highlight_start":13,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":3942,"byte_end":3951,"line_start":109,"line_end":109,"column_start":13,"column_end":22,"is_primary":true,"text":[{"text":"    let mut foundData : DateTime<Utc> = Utc::now();","highlight_start":13,"highlight_end":22}],"label":null,"suggested_replacement":"found_data","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `foundData` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:109:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m109\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    let mut foundData : DateTime<Utc> = Utc::now();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `found_data`\u001b[0m\n\n"}
{"message":"variable `neededBatteryPercantage` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":4446,"byte_end":4469,"line_start":125,"line_end":125,"column_start":13,"column_end":36,"is_primary":true,"text":[{"text":"    let mut neededBatteryPercantage:u8 = desiredStateOfCharge - vehicleBattery.get_current_state() ;","highlight_start":13,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":4446,"byte_end":4469,"line_start":125,"line_end":125,"column_start":13,"column_end":36,"is_primary":true,"text":[{"text":"    let mut neededBatteryPercantage:u8 = desiredStateOfCharge - vehicleBattery.get_current_state() ;","highlight_start":13,"highlight_end":36}],"label":null,"suggested_replacement":"needed_battery_percantage","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `neededBatteryPercantage` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:125:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m125\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    let mut neededBatteryPercantage:u8 = desiredStateOfCharge - vehicleBattery.get_current_state() ;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `needed_battery_percantage`\u001b[0m\n\n"}
{"message":"variable `vehicleChargingCapacity_kWh` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":4550,"byte_end":4577,"line_start":127,"line_end":127,"column_start":13,"column_end":40,"is_primary":true,"text":[{"text":"    let mut vehicleChargingCapacity_kWh = ((vehicleBattery.get_phase_count() * vehicleBattery.get_volt() * vehicleBattery.get_amper())) as f32 / 1000.0_f32;","highlight_start":13,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":4550,"byte_end":4577,"line_start":127,"line_end":127,"column_start":13,"column_end":40,"is_primary":true,"text":[{"text":"    let mut vehicleChargingCapacity_kWh = ((vehicleBattery.get_phase_count() * vehicleBattery.get_volt() * vehicleBattery.get_amper())) as f32 / 1000.0_f32;","highlight_start":13,"highlight_end":40}],"label":null,"suggested_replacement":"vehicle_charging_capacity_k_wh","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `vehicleChargingCapacity_kWh` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:127:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m127\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    let mut vehicleChargingCapacity_kWh = ((vehicleBattery.get_phase_count() * vehicleBattery.get_volt() * vehicleBattery.get_amper())) a\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `vehicle_charging_capacity_k_wh`\u001b[0m\n\n"}
{"message":"variable `neededCapacitykWhWithEfficiencyParameter` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":4780,"byte_end":4820,"line_start":130,"line_end":130,"column_start":13,"column_end":53,"is_primary":true,"text":[{"text":"    let mut neededCapacitykWhWithEfficiencyParameter : f32 = (( vehicleBattery.capacity as f32 / 100.0_f32 )  * neededBatteryPercantage as f32) /  vehicleBattery.get_efficiency();","highlight_start":13,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":4780,"byte_end":4820,"line_start":130,"line_end":130,"column_start":13,"column_end":53,"is_primary":true,"text":[{"text":"    let mut neededCapacitykWhWithEfficiencyParameter : f32 = (( vehicleBattery.capacity as f32 / 100.0_f32 )  * neededBatteryPercantage as f32) /  vehicleBattery.get_efficiency();","highlight_start":13,"highlight_end":53}],"label":null,"suggested_replacement":"needed_capacityk_wh_with_efficiency_parameter","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `neededCapacitykWhWithEfficiencyParameter` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:130:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m130\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    let mut neededCapacitykWhWithEfficiencyParameter : f32 = (( vehicleBattery.capacity as f32 / 100.0_f32 )  * neededBatteryPercantage a\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `needed_capacityk_wh_with_efficiency_parameter`\u001b[0m\n\n"}
{"message":"variable `spotPrices` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":5540,"byte_end":5550,"line_start":147,"line_end":147,"column_start":38,"column_end":48,"is_primary":true,"text":[{"text":"fn get_best_charging_time_for_ground(spotPrices:&SpotPrices, startDate:DateTime<Utc>, travelDate:DateTime<Utc>,neededCapacity_kWh:f32,charginCapacityOfVehicle_Kwh:f32) -> (DateTime<Utc>,f32,i64){","highlight_start":38,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":5540,"byte_end":5550,"line_start":147,"line_end":147,"column_start":38,"column_end":48,"is_primary":true,"text":[{"text":"fn get_best_charging_time_for_ground(spotPrices:&SpotPrices, startDate:DateTime<Utc>, travelDate:DateTime<Utc>,neededCapacity_kWh:f32,charginCapacityOfVehicle_Kwh:f32) -> (DateTime<Utc>,f32,i64){","highlight_start":38,"highlight_end":48}],"label":null,"suggested_replacement":"spot_prices","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `spotPrices` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:147:38\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m147\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0mfn get_best_charging_time_for_ground(spotPrices:&SpotPrices, startDate:DateTime<Utc>, travelDate:DateTime<Utc>,neededCapacity_kWh:f32,cha\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `spot_prices`\u001b[0m\n\n"}
{"message":"variable `startDate` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":5564,"byte_end":5573,"line_start":147,"line_end":147,"column_start":62,"column_end":71,"is_primary":true,"text":[{"text":"fn get_best_charging_time_for_ground(spotPrices:&SpotPrices, startDate:DateTime<Utc>, travelDate:DateTime<Utc>,neededCapacity_kWh:f32,charginCapacityOfVehicle_Kwh:f32) -> (DateTime<Utc>,f32,i64){","highlight_start":62,"highlight_end":71}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":5564,"byte_end":5573,"line_start":147,"line_end":147,"column_start":62,"column_end":71,"is_primary":true,"text":[{"text":"fn get_best_charging_time_for_ground(spotPrices:&SpotPrices, startDate:DateTime<Utc>, travelDate:DateTime<Utc>,neededCapacity_kWh:f32,charginCapacityOfVehicle_Kwh:f32) -> (DateTime<Utc>,f32,i64){","highlight_start":62,"highlight_end":71}],"label":null,"suggested_replacement":"start_date","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `startDate` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:147:62\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m147\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0mfn get_best_charging_time_for_ground(spotPrices:&SpotPrices, startDate:DateTime<Utc>, travelDate:DateTime<Utc>,neededCapacity_kWh:f32,cha\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `start_date`\u001b[0m\n\n"}
{"message":"variable `travelDate` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":5589,"byte_end":5599,"line_start":147,"line_end":147,"column_start":87,"column_end":97,"is_primary":true,"text":[{"text":"fn get_best_charging_time_for_ground(spotPrices:&SpotPrices, startDate:DateTime<Utc>, travelDate:DateTime<Utc>,neededCapacity_kWh:f32,charginCapacityOfVehicle_Kwh:f32) -> (DateTime<Utc>,f32,i64){","highlight_start":87,"highlight_end":97}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":5589,"byte_end":5599,"line_start":147,"line_end":147,"column_start":87,"column_end":97,"is_primary":true,"text":[{"text":"fn get_best_charging_time_for_ground(spotPrices:&SpotPrices, startDate:DateTime<Utc>, travelDate:DateTime<Utc>,neededCapacity_kWh:f32,charginCapacityOfVehicle_Kwh:f32) -> (DateTime<Utc>,f32,i64){","highlight_start":87,"highlight_end":97}],"label":null,"suggested_replacement":"travel_date","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `travelDate` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:147:87\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m147\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| ...\u001b[0m\u001b[0mPrices, startDate:DateTime<Utc>, travelDate:DateTime<Utc>,neededCapacity_kWh:f32,charginCapacityOfVehicle_Kwh:f32) -> (DateTime<Utc>,f\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `travel_date`\u001b[0m\n\n"}
{"message":"variable `neededCapacity_kWh` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":5614,"byte_end":5632,"line_start":147,"line_end":147,"column_start":112,"column_end":130,"is_primary":true,"text":[{"text":"fn get_best_charging_time_for_ground(spotPrices:&SpotPrices, startDate:DateTime<Utc>, travelDate:DateTime<Utc>,neededCapacity_kWh:f32,charginCapacityOfVehicle_Kwh:f32) -> (DateTime<Utc>,f32,i64){","highlight_start":112,"highlight_end":130}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":5614,"byte_end":5632,"line_start":147,"line_end":147,"column_start":112,"column_end":130,"is_primary":true,"text":[{"text":"fn get_best_charging_time_for_ground(spotPrices:&SpotPrices, startDate:DateTime<Utc>, travelDate:DateTime<Utc>,neededCapacity_kWh:f32,charginCapacityOfVehicle_Kwh:f32) -> (DateTime<Utc>,f32,i64){","highlight_start":112,"highlight_end":130}],"label":null,"suggested_replacement":"needed_capacity_k_wh","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `neededCapacity_kWh` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:147:112\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m147\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| ...\u001b[0m\u001b[0mravelDate:DateTime<Utc>,neededCapacity_kWh:f32,charginCapacityOfVehicle_Kwh:f32) -> (DateTime<Utc>,f32,i64){\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `needed_capacity_k_wh`\u001b[0m\n\n"}
{"message":"variable `charginCapacityOfVehicle_Kwh` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":5637,"byte_end":5665,"line_start":147,"line_end":147,"column_start":135,"column_end":163,"is_primary":true,"text":[{"text":"fn get_best_charging_time_for_ground(spotPrices:&SpotPrices, startDate:DateTime<Utc>, travelDate:DateTime<Utc>,neededCapacity_kWh:f32,charginCapacityOfVehicle_Kwh:f32) -> (DateTime<Utc>,f32,i64){","highlight_start":135,"highlight_end":163}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":5637,"byte_end":5665,"line_start":147,"line_end":147,"column_start":135,"column_end":163,"is_primary":true,"text":[{"text":"fn get_best_charging_time_for_ground(spotPrices:&SpotPrices, startDate:DateTime<Utc>, travelDate:DateTime<Utc>,neededCapacity_kWh:f32,charginCapacityOfVehicle_Kwh:f32) -> (DateTime<Utc>,f32,i64){","highlight_start":135,"highlight_end":163}],"label":null,"suggested_replacement":"chargin_capacity_of_vehicle_kwh","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `charginCapacityOfVehicle_Kwh` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:147:135\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m147\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| ...\u001b[0m\u001b[0macity_kWh:f32,charginCapacityOfVehicle_Kwh:f32) -> (DateTime<Utc>,f32,i64){\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                 \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `chargin_capacity_of_vehicle_kwh`\u001b[0m\n\n"}
{"message":"variable `bestTime` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":5714,"byte_end":5722,"line_start":149,"line_end":149,"column_start":13,"column_end":21,"is_primary":true,"text":[{"text":"    let mut bestTime = startDate.clone();","highlight_start":13,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":5714,"byte_end":5722,"line_start":149,"line_end":149,"column_start":13,"column_end":21,"is_primary":true,"text":[{"text":"    let mut bestTime = startDate.clone();","highlight_start":13,"highlight_end":21}],"label":null,"suggested_replacement":"best_time","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `bestTime` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:149:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m149\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    let mut bestTime = startDate.clone();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `best_time`\u001b[0m\n\n"}
{"message":"variable `currTime` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":5757,"byte_end":5765,"line_start":150,"line_end":150,"column_start":13,"column_end":21,"is_primary":true,"text":[{"text":"    let mut currTime = startDate.clone();","highlight_start":13,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":5757,"byte_end":5765,"line_start":150,"line_end":150,"column_start":13,"column_end":21,"is_primary":true,"text":[{"text":"    let mut currTime = startDate.clone();","highlight_start":13,"highlight_end":21}],"label":null,"suggested_replacement":"curr_time","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `currTime` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:150:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m150\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    let mut currTime = startDate.clone();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `curr_time`\u001b[0m\n\n"}
{"message":"variable `bestPrice` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":5800,"byte_end":5809,"line_start":151,"line_end":151,"column_start":13,"column_end":22,"is_primary":true,"text":[{"text":"    let mut bestPrice = f32::MAX;","highlight_start":13,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":5800,"byte_end":5809,"line_start":151,"line_end":151,"column_start":13,"column_end":22,"is_primary":true,"text":[{"text":"    let mut bestPrice = f32::MAX;","highlight_start":13,"highlight_end":22}],"label":null,"suggested_replacement":"best_price","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `bestPrice` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:151:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m151\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    let mut bestPrice = f32::MAX;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `best_price`\u001b[0m\n\n"}
{"message":"variable `totalChargingDurationInMinutes` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":5833,"byte_end":5863,"line_start":153,"line_end":153,"column_start":9,"column_end":39,"is_primary":true,"text":[{"text":"    let totalChargingDurationInMinutes = ((neededCapacity_kWh / charginCapacityOfVehicle_Kwh) * MINUTES_IN_HOUR as f32) as i64;","highlight_start":9,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":5833,"byte_end":5863,"line_start":153,"line_end":153,"column_start":9,"column_end":39,"is_primary":true,"text":[{"text":"    let totalChargingDurationInMinutes = ((neededCapacity_kWh / charginCapacityOfVehicle_Kwh) * MINUTES_IN_HOUR as f32) as i64;","highlight_start":9,"highlight_end":39}],"label":null,"suggested_replacement":"total_charging_duration_in_minutes","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `totalChargingDurationInMinutes` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:153:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m153\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    let totalChargingDurationInMinutes = ((neededCapacity_kWh / charginCapacityOfVehicle_Kwh) * MINUTES_IN_HOUR as f32) as i64;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `total_charging_duration_in_minutes`\u001b[0m\n\n"}
{"message":"variable `endTime` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":5966,"byte_end":5973,"line_start":154,"line_end":154,"column_start":13,"column_end":20,"is_primary":true,"text":[{"text":"    let mut endTime = currTime + Duration::minutes(totalChargingDurationInMinutes);","highlight_start":13,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":5966,"byte_end":5973,"line_start":154,"line_end":154,"column_start":13,"column_end":20,"is_primary":true,"text":[{"text":"    let mut endTime = currTime + Duration::minutes(totalChargingDurationInMinutes);","highlight_start":13,"highlight_end":20}],"label":null,"suggested_replacement":"end_time","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `endTime` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:154:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m154\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    let mut endTime = currTime + Duration::minutes(totalChargingDurationInMinutes);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `end_time`\u001b[0m\n\n"}
{"message":"variable `proposedPrice` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":6237,"byte_end":6250,"line_start":161,"line_end":161,"column_start":13,"column_end":26,"is_primary":true,"text":[{"text":"        let proposedPrice = calculate_market_price_of_a_time_period(&spotPrices,currTime,totalChargingDurationInMinutes);","highlight_start":13,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":6237,"byte_end":6250,"line_start":161,"line_end":161,"column_start":13,"column_end":26,"is_primary":true,"text":[{"text":"        let proposedPrice = calculate_market_price_of_a_time_period(&spotPrices,currTime,totalChargingDurationInMinutes);","highlight_start":13,"highlight_end":26}],"label":null,"suggested_replacement":"proposed_price","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `proposedPrice` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:161:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m161\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        let proposedPrice = calculate_market_price_of_a_time_period(&spotPrices,currTime,totalChargingDurationInMinutes);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `proposed_price`\u001b[0m\n\n"}
{"message":"variable `spotPrices` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":7057,"byte_end":7067,"line_start":185,"line_end":185,"column_start":44,"column_end":54,"is_primary":true,"text":[{"text":"fn calculate_market_price_of_a_time_period(spotPrices:&SpotPrices,startDate:DateTime<Utc>,durationInMinutes:i64) -> f32{","highlight_start":44,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":7057,"byte_end":7067,"line_start":185,"line_end":185,"column_start":44,"column_end":54,"is_primary":true,"text":[{"text":"fn calculate_market_price_of_a_time_period(spotPrices:&SpotPrices,startDate:DateTime<Utc>,durationInMinutes:i64) -> f32{","highlight_start":44,"highlight_end":54}],"label":null,"suggested_replacement":"spot_prices","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `spotPrices` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:185:44\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m185\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0mfn calculate_market_price_of_a_time_period(spotPrices:&SpotPrices,startDate:DateTime<Utc>,durationInMinutes:i64) -> f32{\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `spot_prices`\u001b[0m\n\n"}
{"message":"variable `startDate` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":7080,"byte_end":7089,"line_start":185,"line_end":185,"column_start":67,"column_end":76,"is_primary":true,"text":[{"text":"fn calculate_market_price_of_a_time_period(spotPrices:&SpotPrices,startDate:DateTime<Utc>,durationInMinutes:i64) -> f32{","highlight_start":67,"highlight_end":76}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":7080,"byte_end":7089,"line_start":185,"line_end":185,"column_start":67,"column_end":76,"is_primary":true,"text":[{"text":"fn calculate_market_price_of_a_time_period(spotPrices:&SpotPrices,startDate:DateTime<Utc>,durationInMinutes:i64) -> f32{","highlight_start":67,"highlight_end":76}],"label":null,"suggested_replacement":"start_date","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `startDate` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:185:67\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m185\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0mfn calculate_market_price_of_a_time_period(spotPrices:&SpotPrices,startDate:DateTime<Utc>,durationInMinutes:i64) -> f32{\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `start_date`\u001b[0m\n\n"}
{"message":"variable `durationInMinutes` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":7104,"byte_end":7121,"line_start":185,"line_end":185,"column_start":91,"column_end":108,"is_primary":true,"text":[{"text":"fn calculate_market_price_of_a_time_period(spotPrices:&SpotPrices,startDate:DateTime<Utc>,durationInMinutes:i64) -> f32{","highlight_start":91,"highlight_end":108}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":7104,"byte_end":7121,"line_start":185,"line_end":185,"column_start":91,"column_end":108,"is_primary":true,"text":[{"text":"fn calculate_market_price_of_a_time_period(spotPrices:&SpotPrices,startDate:DateTime<Utc>,durationInMinutes:i64) -> f32{","highlight_start":91,"highlight_end":108}],"label":null,"suggested_replacement":"duration_in_minutes","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `durationInMinutes` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:185:91\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m185\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0mfn calculate_market_price_of_a_time_period(spotPrices:&SpotPrices,startDate:DateTime<Utc>,durationInMinutes:i64) -> f32{\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                                                                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `duration_in_minutes`\u001b[0m\n\n"}
{"message":"variable `marketPriceInMin` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":7148,"byte_end":7164,"line_start":186,"line_end":186,"column_start":13,"column_end":29,"is_primary":true,"text":[{"text":"    let mut marketPriceInMin = 0.0;","highlight_start":13,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":7148,"byte_end":7164,"line_start":186,"line_end":186,"column_start":13,"column_end":29,"is_primary":true,"text":[{"text":"    let mut marketPriceInMin = 0.0;","highlight_start":13,"highlight_end":29}],"label":null,"suggested_replacement":"market_price_in_min","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `marketPriceInMin` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:186:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m186\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    let mut marketPriceInMin = 0.0;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `market_price_in_min`\u001b[0m\n\n"}
{"message":"variable `endTime` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":7185,"byte_end":7192,"line_start":187,"line_end":187,"column_start":13,"column_end":20,"is_primary":true,"text":[{"text":"    let mut endTime = startDate + Duration::minutes(durationInMinutes);","highlight_start":13,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":7185,"byte_end":7192,"line_start":187,"line_end":187,"column_start":13,"column_end":20,"is_primary":true,"text":[{"text":"    let mut endTime = startDate + Duration::minutes(durationInMinutes);","highlight_start":13,"highlight_end":20}],"label":null,"suggested_replacement":"end_time","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `endTime` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:187:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m187\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    let mut endTime = startDate + Duration::minutes(durationInMinutes);\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `end_time`\u001b[0m\n\n"}
{"message":"variable `currTime` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":7258,"byte_end":7266,"line_start":188,"line_end":188,"column_start":13,"column_end":21,"is_primary":true,"text":[{"text":"    let mut currTime = startDate.clone();","highlight_start":13,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":7258,"byte_end":7266,"line_start":188,"line_end":188,"column_start":13,"column_end":21,"is_primary":true,"text":[{"text":"    let mut currTime = startDate.clone();","highlight_start":13,"highlight_end":21}],"label":null,"suggested_replacement":"curr_time","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `currTime` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:188:13\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m188\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    let mut currTime = startDate.clone();\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `curr_time`\u001b[0m\n\n"}
{"message":"variable `spotPrices` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":8014,"byte_end":8024,"line_start":215,"line_end":215,"column_start":36,"column_end":46,"is_primary":true,"text":[{"text":"fn get_market_price_for_exact_date(spotPrices:&SpotPrices,givenDate:DateTime<Utc>) -> f32{","highlight_start":36,"highlight_end":46}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":8014,"byte_end":8024,"line_start":215,"line_end":215,"column_start":36,"column_end":46,"is_primary":true,"text":[{"text":"fn get_market_price_for_exact_date(spotPrices:&SpotPrices,givenDate:DateTime<Utc>) -> f32{","highlight_start":36,"highlight_end":46}],"label":null,"suggested_replacement":"spot_prices","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `spotPrices` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:215:36\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m215\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0mfn get_market_price_for_exact_date(spotPrices:&SpotPrices,givenDate:DateTime<Utc>) -> f32{\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `spot_prices`\u001b[0m\n\n"}
{"message":"variable `givenDate` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":8037,"byte_end":8046,"line_start":215,"line_end":215,"column_start":59,"column_end":68,"is_primary":true,"text":[{"text":"fn get_market_price_for_exact_date(spotPrices:&SpotPrices,givenDate:DateTime<Utc>) -> f32{","highlight_start":59,"highlight_end":68}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":8037,"byte_end":8046,"line_start":215,"line_end":215,"column_start":59,"column_end":68,"is_primary":true,"text":[{"text":"fn get_market_price_for_exact_date(spotPrices:&SpotPrices,givenDate:DateTime<Utc>) -> f32{","highlight_start":59,"highlight_end":68}],"label":null,"suggested_replacement":"given_date","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `givenDate` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:215:59\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m215\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0mfn get_market_price_for_exact_date(spotPrices:&SpotPrices,givenDate:DateTime<Utc>) -> f32{\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `given_date`\u001b[0m\n\n"}
{"message":"structure field `marketPrice` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\spot_price.rs","byte_start":362,"byte_end":373,"line_start":19,"line_end":19,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"    pub marketPrice: f32,","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\spot_price.rs","byte_start":362,"byte_end":373,"line_start":19,"line_end":19,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"    pub marketPrice: f32,","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":"market_price","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: structure field `marketPrice` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\spot_price.rs:19:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m19\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    pub marketPrice: f32,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `market_price`\u001b[0m\n\n"}
{"message":"structure field `solarYieldWattHour` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\solar_yield.rs","byte_start":769,"byte_end":787,"line_start":25,"line_end":25,"column_start":9,"column_end":27,"is_primary":true,"text":[{"text":"    pub solarYieldWattHour:u16,","highlight_start":9,"highlight_end":27}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\solar_yield.rs","byte_start":769,"byte_end":787,"line_start":25,"line_end":25,"column_start":9,"column_end":27,"is_primary":true,"text":[{"text":"    pub solarYieldWattHour:u16,","highlight_start":9,"highlight_end":27}],"label":null,"suggested_replacement":"solar_yield_watt_hour","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: structure field `solarYieldWattHour` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\solar_yield.rs:25:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    pub solarYieldWattHour:u16,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `solar_yield_watt_hour`\u001b[0m\n\n"}
{"message":"80 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: 80 warnings emitted\u001b[0m\n\n"}
