{"message":"unused import: `std::fs::File`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\lib.rs","byte_start":6,"byte_end":19,"line_start":2,"line_end":2,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"use std::fs::File;","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_imports)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src\\lib.rs","byte_start":2,"byte_end":20,"line_start":2,"line_end":2,"column_start":1,"column_end":19,"is_primary":true,"text":[{"text":"use std::fs::File;","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `std::fs::File`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\lib.rs:2:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m2\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0muse std::fs::File;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_imports)]` on by default\u001b[0m\n\n"}
{"message":"unused import: `std::io::Read`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\lib.rs","byte_start":26,"byte_end":39,"line_start":3,"line_end":3,"column_start":5,"column_end":18,"is_primary":true,"text":[{"text":"use std::io::Read;","highlight_start":5,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src\\lib.rs","byte_start":22,"byte_end":40,"line_start":3,"line_end":3,"column_start":1,"column_end":19,"is_primary":true,"text":[{"text":"use std::io::Read;","highlight_start":1,"highlight_end":19}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `std::io::Read`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\lib.rs:3:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0muse std::io::Read;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `std::env`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\lib.rs","byte_start":46,"byte_end":54,"line_start":4,"line_end":4,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"use std::env;","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src\\lib.rs","byte_start":42,"byte_end":55,"line_start":4,"line_end":4,"column_start":1,"column_end":14,"is_primary":true,"text":[{"text":"use std::env;","highlight_start":1,"highlight_end":14}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `std::env`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\lib.rs:4:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m4\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0muse std::env;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\n\n"}
{"message":"unused imports: `Deserialize`, `Serialize`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\lib.rs","byte_start":69,"byte_end":78,"line_start":5,"line_end":5,"column_start":13,"column_end":22,"is_primary":true,"text":[{"text":"use serde::{Serialize, Deserialize};","highlight_start":13,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\lib.rs","byte_start":80,"byte_end":91,"line_start":5,"line_end":5,"column_start":24,"column_end":35,"is_primary":true,"text":[{"text":"use serde::{Serialize, Deserialize};","highlight_start":24,"highlight_end":35}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src\\lib.rs","byte_start":57,"byte_end":93,"line_start":5,"line_end":5,"column_start":1,"column_end":37,"is_primary":true,"text":[{"text":"use serde::{Serialize, Deserialize};","highlight_start":1,"highlight_end":37}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused imports: `Deserialize`, `Serialize`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\lib.rs:5:13\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0muse serde::{Serialize, Deserialize};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused imports: `DateTime`, `Duration`, `Utc`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\lib.rs","byte_start":108,"byte_end":116,"line_start":6,"line_end":6,"column_start":14,"column_end":22,"is_primary":true,"text":[{"text":"use chrono::{DateTime, Duration, Utc};","highlight_start":14,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\lib.rs","byte_start":118,"byte_end":126,"line_start":6,"line_end":6,"column_start":24,"column_end":32,"is_primary":true,"text":[{"text":"use chrono::{DateTime, Duration, Utc};","highlight_start":24,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\lib.rs","byte_start":128,"byte_end":131,"line_start":6,"line_end":6,"column_start":34,"column_end":37,"is_primary":true,"text":[{"text":"use chrono::{DateTime, Duration, Utc};","highlight_start":34,"highlight_end":37}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src\\lib.rs","byte_start":95,"byte_end":133,"line_start":6,"line_end":6,"column_start":1,"column_end":39,"is_primary":true,"text":[{"text":"use chrono::{DateTime, Duration, Utc};","highlight_start":1,"highlight_end":39}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused imports: `DateTime`, `Duration`, `Utc`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\lib.rs:6:14\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0muse chrono::{DateTime, Duration, Utc};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^\u001b[0m\n\n"}
{"message":"unnecessary parentheses around assigned value","code":{"code":"unused_parens","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":3609,"byte_end":3610,"line_start":103,"line_end":103,"column_start":29,"column_end":30,"is_primary":true,"text":[{"text":"        marketPriceInMin += (get_market_price_per_hour(&spotPrices,currTime) / MINUTES_IN_HOUR as f32); ","highlight_start":29,"highlight_end":30}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null},{"file_name":"src\\charging_scheduler.rs","byte_start":3682,"byte_end":3683,"line_start":103,"line_end":103,"column_start":102,"column_end":103,"is_primary":true,"text":[{"text":"        marketPriceInMin += (get_market_price_per_hour(&spotPrices,currTime) / MINUTES_IN_HOUR as f32); ","highlight_start":102,"highlight_end":103}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_parens)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove these parentheses","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":3609,"byte_end":3610,"line_start":103,"line_end":103,"column_start":29,"column_end":30,"is_primary":true,"text":[{"text":"        marketPriceInMin += (get_market_price_per_hour(&spotPrices,currTime) / MINUTES_IN_HOUR as f32); ","highlight_start":29,"highlight_end":30}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null},{"file_name":"src\\charging_scheduler.rs","byte_start":3682,"byte_end":3683,"line_start":103,"line_end":103,"column_start":102,"column_end":103,"is_primary":true,"text":[{"text":"        marketPriceInMin += (get_market_price_per_hour(&spotPrices,currTime) / MINUTES_IN_HOUR as f32); ","highlight_start":102,"highlight_end":103}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unnecessary parentheses around assigned value\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:103:29\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m103\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        marketPriceInMin += (get_market_price_per_hour(&spotPrices,currTime) / MINUTES_IN_HOUR as f32); \u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^\u001b[0m\u001b[0m                                                                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_parens)]` on by default\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14mhelp\u001b[0m\u001b[0m: remove these parentheses\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m103\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;9m- \u001b[0m\u001b[0m        marketPriceInMin += \u001b[0m\u001b[0m\u001b[38;5;9m(\u001b[0m\u001b[0mget_market_price_per_hour(&spotPrices,currTime) / MINUTES_IN_HOUR as f32\u001b[0m\u001b[0m\u001b[38;5;9m)\u001b[0m\u001b[0m; \u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m103\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[38;5;10m+ \u001b[0m\u001b[0m        marketPriceInMin += get_market_price_per_hour(&spotPrices,currTime) / MINUTES_IN_HOUR as f32; \u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\n\n"}
{"message":"unused import: `Duration`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\spot_price.rs","byte_start":118,"byte_end":126,"line_start":6,"line_end":6,"column_start":24,"column_end":32,"is_primary":true,"text":[{"text":"use chrono::{DateTime, Duration, Utc};","highlight_start":24,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src\\spot_price.rs","byte_start":116,"byte_end":126,"line_start":6,"line_end":6,"column_start":22,"column_end":32,"is_primary":true,"text":[{"text":"use chrono::{DateTime, Duration, Utc};","highlight_start":22,"highlight_end":32}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `Duration`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\spot_price.rs:6:24\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m6\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0muse chrono::{DateTime, Duration, Utc};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `std::cmp::Ordering`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\spot_price.rs","byte_start":139,"byte_end":157,"line_start":7,"line_end":7,"column_start":5,"column_end":23,"is_primary":true,"text":[{"text":"use std::cmp::Ordering;","highlight_start":5,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src\\spot_price.rs","byte_start":135,"byte_end":158,"line_start":7,"line_end":7,"column_start":1,"column_end":24,"is_primary":true,"text":[{"text":"use std::cmp::Ordering;","highlight_start":1,"highlight_end":24}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `std::cmp::Ordering`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\spot_price.rs:7:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m7\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0muse std::cmp::Ordering;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `std::env`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\solar_yield.rs","byte_start":44,"byte_end":52,"line_start":3,"line_end":3,"column_start":5,"column_end":13,"is_primary":true,"text":[{"text":"use std::env;","highlight_start":5,"highlight_end":13}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src\\solar_yield.rs","byte_start":40,"byte_end":53,"line_start":3,"line_end":3,"column_start":1,"column_end":14,"is_primary":true,"text":[{"text":"use std::env;","highlight_start":1,"highlight_end":14}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `std::env`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\solar_yield.rs:3:5\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m3\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0muse std::env;\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `Duration`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\solar_yield.rs","byte_start":116,"byte_end":124,"line_start":5,"line_end":5,"column_start":24,"column_end":32,"is_primary":true,"text":[{"text":"use chrono::{DateTime, Duration, Utc};","highlight_start":24,"highlight_end":32}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the unused import","code":null,"level":"help","spans":[{"file_name":"src\\solar_yield.rs","byte_start":114,"byte_end":124,"line_start":5,"line_end":5,"column_start":22,"column_end":32,"is_primary":true,"text":[{"text":"use chrono::{DateTime, Duration, Utc};","highlight_start":22,"highlight_end":32}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `Duration`\u001b[0m\n\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\solar_yield.rs:5:24\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m5\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0muse chrono::{DateTime, Duration, Utc};\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `reqwest`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\lib.rs","byte_start":888,"byte_end":895,"line_start":40,"line_end":40,"column_start":5,"column_end":12,"is_primary":true,"text":[{"text":"use reqwest; // 0.9.10","highlight_start":5,"highlight_end":12}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src\\lib.rs","byte_start":884,"byte_end":896,"line_start":40,"line_end":40,"column_start":1,"column_end":13,"is_primary":true,"text":[{"text":"use reqwest; // 0.9.10","highlight_start":1,"highlight_end":13}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `reqwest`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\lib.rs:40:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m40\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0muse reqwest; // 0.9.10\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `serde_json::Value`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\lib.rs","byte_start":914,"byte_end":931,"line_start":42,"line_end":42,"column_start":5,"column_end":22,"is_primary":true,"text":[{"text":"use serde_json::Value; // 1.0.38","highlight_start":5,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src\\lib.rs","byte_start":910,"byte_end":932,"line_start":42,"line_end":42,"column_start":1,"column_end":23,"is_primary":true,"text":[{"text":"use serde_json::Value; // 1.0.38","highlight_start":1,"highlight_end":23}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `serde_json::Value`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\lib.rs:42:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m42\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0muse serde_json::Value; // 1.0.38\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused import: `std::error::Error`","code":{"code":"unused_imports","explanation":null},"level":"warning","spans":[{"file_name":"src\\lib.rs","byte_start":952,"byte_end":969,"line_start":45,"line_end":45,"column_start":5,"column_end":22,"is_primary":true,"text":[{"text":"use std::error::Error;","highlight_start":5,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove the whole `use` item","code":null,"level":"help","spans":[{"file_name":"src\\lib.rs","byte_start":948,"byte_end":970,"line_start":45,"line_end":45,"column_start":1,"column_end":23,"is_primary":true,"text":[{"text":"use std::error::Error;","highlight_start":1,"highlight_end":23}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused import: `std::error::Error`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\lib.rs:45:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m45\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0muse std::error::Error;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"unused variable: `vehicleBattery`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":272,"byte_end":286,"line_start":15,"line_end":15,"column_start":51,"column_end":65,"is_primary":true,"text":[{"text":"fn get_best_time_for_charging_include_solar_power(vehicleBattery:Battery,currDate:DateTime<Utc>, leaveDate:DateTime<Utc>, desiredStateOfCharge:u8, spotPrices:SpotPrices, solarYields:SolarYields,estimatedTravelDurationInHours : f32)-> DateTime<Utc>","highlight_start":51,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_variables)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":272,"byte_end":286,"line_start":15,"line_end":15,"column_start":51,"column_end":65,"is_primary":true,"text":[{"text":"fn get_best_time_for_charging_include_solar_power(vehicleBattery:Battery,currDate:DateTime<Utc>, leaveDate:DateTime<Utc>, desiredStateOfCharge:u8, spotPrices:SpotPrices, solarYields:SolarYields,estimatedTravelDurationInHours : f32)-> DateTime<Utc>","highlight_start":51,"highlight_end":65}],"label":null,"suggested_replacement":"_vehicleBattery","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `vehicleBattery`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:15:51\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| ...\u001b[0m\u001b[0m_include_solar_power(vehicleBattery:Battery,currDate:DateTime<Utc>, leaveDate:DateTime<Utc>, desiredStateOfCharge:u8, spotPrices:SpotP\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_vehicleBattery`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_variables)]` on by default\u001b[0m\n\n"}
{"message":"unused variable: `currDate`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":295,"byte_end":303,"line_start":15,"line_end":15,"column_start":74,"column_end":82,"is_primary":true,"text":[{"text":"fn get_best_time_for_charging_include_solar_power(vehicleBattery:Battery,currDate:DateTime<Utc>, leaveDate:DateTime<Utc>, desiredStateOfCharge:u8, spotPrices:SpotPrices, solarYields:SolarYields,estimatedTravelDurationInHours : f32)-> DateTime<Utc>","highlight_start":74,"highlight_end":82}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":295,"byte_end":303,"line_start":15,"line_end":15,"column_start":74,"column_end":82,"is_primary":true,"text":[{"text":"fn get_best_time_for_charging_include_solar_power(vehicleBattery:Battery,currDate:DateTime<Utc>, leaveDate:DateTime<Utc>, desiredStateOfCharge:u8, spotPrices:SpotPrices, solarYields:SolarYields,estimatedTravelDurationInHours : f32)-> DateTime<Utc>","highlight_start":74,"highlight_end":82}],"label":null,"suggested_replacement":"_currDate","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `currDate`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:15:74\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| ...\u001b[0m\u001b[0mwer(vehicleBattery:Battery,currDate:DateTime<Utc>, leaveDate:DateTime<Utc>, desiredStateOfCharge:u8, spotPrices:SpotPrices, solarYield\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_currDate`\u001b[0m\n\n"}
{"message":"unused variable: `leaveDate`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":319,"byte_end":328,"line_start":15,"line_end":15,"column_start":98,"column_end":107,"is_primary":true,"text":[{"text":"fn get_best_time_for_charging_include_solar_power(vehicleBattery:Battery,currDate:DateTime<Utc>, leaveDate:DateTime<Utc>, desiredStateOfCharge:u8, spotPrices:SpotPrices, solarYields:SolarYields,estimatedTravelDurationInHours : f32)-> DateTime<Utc>","highlight_start":98,"highlight_end":107}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":319,"byte_end":328,"line_start":15,"line_end":15,"column_start":98,"column_end":107,"is_primary":true,"text":[{"text":"fn get_best_time_for_charging_include_solar_power(vehicleBattery:Battery,currDate:DateTime<Utc>, leaveDate:DateTime<Utc>, desiredStateOfCharge:u8, spotPrices:SpotPrices, solarYields:SolarYields,estimatedTravelDurationInHours : f32)-> DateTime<Utc>","highlight_start":98,"highlight_end":107}],"label":null,"suggested_replacement":"_leaveDate","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `leaveDate`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:15:98\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| ...\u001b[0m\u001b[0my,currDate:DateTime<Utc>, leaveDate:DateTime<Utc>, desiredStateOfCharge:u8, spotPrices:SpotPrices, solarYields:SolarYields,estimatedTr\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_leaveDate`\u001b[0m\n\n"}
{"message":"unused variable: `desiredStateOfCharge`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":344,"byte_end":364,"line_start":15,"line_end":15,"column_start":123,"column_end":143,"is_primary":true,"text":[{"text":"fn get_best_time_for_charging_include_solar_power(vehicleBattery:Battery,currDate:DateTime<Utc>, leaveDate:DateTime<Utc>, desiredStateOfCharge:u8, spotPrices:SpotPrices, solarYields:SolarYields,estimatedTravelDurationInHours : f32)-> DateTime<Utc>","highlight_start":123,"highlight_end":143}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":344,"byte_end":364,"line_start":15,"line_end":15,"column_start":123,"column_end":143,"is_primary":true,"text":[{"text":"fn get_best_time_for_charging_include_solar_power(vehicleBattery:Battery,currDate:DateTime<Utc>, leaveDate:DateTime<Utc>, desiredStateOfCharge:u8, spotPrices:SpotPrices, solarYields:SolarYields,estimatedTravelDurationInHours : f32)-> DateTime<Utc>","highlight_start":123,"highlight_end":143}],"label":null,"suggested_replacement":"_desiredStateOfCharge","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `desiredStateOfCharge`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:15:123\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| ...\u001b[0m\u001b[0mDateTime<Utc>, desiredStateOfCharge:u8, spotPrices:SpotPrices, solarYields:SolarYields,estimatedTravelDurationInHours : f32)-> DateTim\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_desiredStateOfCharge`\u001b[0m\n\n"}
{"message":"unused variable: `spotPrices`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":369,"byte_end":379,"line_start":15,"line_end":15,"column_start":148,"column_end":158,"is_primary":true,"text":[{"text":"fn get_best_time_for_charging_include_solar_power(vehicleBattery:Battery,currDate:DateTime<Utc>, leaveDate:DateTime<Utc>, desiredStateOfCharge:u8, spotPrices:SpotPrices, solarYields:SolarYields,estimatedTravelDurationInHours : f32)-> DateTime<Utc>","highlight_start":148,"highlight_end":158}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":369,"byte_end":379,"line_start":15,"line_end":15,"column_start":148,"column_end":158,"is_primary":true,"text":[{"text":"fn get_best_time_for_charging_include_solar_power(vehicleBattery:Battery,currDate:DateTime<Utc>, leaveDate:DateTime<Utc>, desiredStateOfCharge:u8, spotPrices:SpotPrices, solarYields:SolarYields,estimatedTravelDurationInHours : f32)-> DateTime<Utc>","highlight_start":148,"highlight_end":158}],"label":null,"suggested_replacement":"_spotPrices","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `spotPrices`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:15:148\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| ...\u001b[0m\u001b[0mdesiredStateOfCharge:u8, spotPrices:SpotPrices, solarYields:SolarYields,estimatedTravelDurationInHours : f32)-> DateTime<Utc>\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_spotPrices`\u001b[0m\n\n"}
{"message":"unused variable: `solarYields`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":392,"byte_end":403,"line_start":15,"line_end":15,"column_start":171,"column_end":182,"is_primary":true,"text":[{"text":"fn get_best_time_for_charging_include_solar_power(vehicleBattery:Battery,currDate:DateTime<Utc>, leaveDate:DateTime<Utc>, desiredStateOfCharge:u8, spotPrices:SpotPrices, solarYields:SolarYields,estimatedTravelDurationInHours : f32)-> DateTime<Utc>","highlight_start":171,"highlight_end":182}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":392,"byte_end":403,"line_start":15,"line_end":15,"column_start":171,"column_end":182,"is_primary":true,"text":[{"text":"fn get_best_time_for_charging_include_solar_power(vehicleBattery:Battery,currDate:DateTime<Utc>, leaveDate:DateTime<Utc>, desiredStateOfCharge:u8, spotPrices:SpotPrices, solarYields:SolarYields,estimatedTravelDurationInHours : f32)-> DateTime<Utc>","highlight_start":171,"highlight_end":182}],"label":null,"suggested_replacement":"_solarYields","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `solarYields`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:15:171\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| ...\u001b[0m\u001b[0m spotPrices:SpotPrices, solarYields:SolarYields,estimatedTravelDurationInHours : f32)-> DateTime<Utc>\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_solarYields`\u001b[0m\n\n"}
{"message":"unused variable: `estimatedTravelDurationInHours`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":416,"byte_end":446,"line_start":15,"line_end":15,"column_start":195,"column_end":225,"is_primary":true,"text":[{"text":"fn get_best_time_for_charging_include_solar_power(vehicleBattery:Battery,currDate:DateTime<Utc>, leaveDate:DateTime<Utc>, desiredStateOfCharge:u8, spotPrices:SpotPrices, solarYields:SolarYields,estimatedTravelDurationInHours : f32)-> DateTime<Utc>","highlight_start":195,"highlight_end":225}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":416,"byte_end":446,"line_start":15,"line_end":15,"column_start":195,"column_end":225,"is_primary":true,"text":[{"text":"fn get_best_time_for_charging_include_solar_power(vehicleBattery:Battery,currDate:DateTime<Utc>, leaveDate:DateTime<Utc>, desiredStateOfCharge:u8, spotPrices:SpotPrices, solarYields:SolarYields,estimatedTravelDurationInHours : f32)-> DateTime<Utc>","highlight_start":195,"highlight_end":225}],"label":null,"suggested_replacement":"_estimatedTravelDurationInHours","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `estimatedTravelDurationInHours`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:15:195\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| ...\u001b[0m\u001b[0melds,estimatedTravelDurationInHours : f32)-> DateTime<Utc>\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_estimatedTravelDurationInHours`\u001b[0m\n\n"}
{"message":"unused variable: `foundData`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":792,"byte_end":801,"line_start":28,"line_end":28,"column_start":13,"column_end":22,"is_primary":true,"text":[{"text":"    let mut foundData : DateTime<Utc> = Utc::now();","highlight_start":13,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":792,"byte_end":801,"line_start":28,"line_end":28,"column_start":13,"column_end":22,"is_primary":true,"text":[{"text":"    let mut foundData : DateTime<Utc> = Utc::now();","highlight_start":13,"highlight_end":22}],"label":null,"suggested_replacement":"_foundData","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `foundData`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:28:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m28\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    let mut foundData : DateTime<Utc> = Utc::now();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_foundData`\u001b[0m\n\n"}
{"message":"unused variable: `i`","code":{"code":"unused_variables","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":3515,"byte_end":3516,"line_start":100,"line_end":100,"column_start":9,"column_end":10,"is_primary":true,"text":[{"text":"    for i in 0..durationInMinutes{","highlight_start":9,"highlight_end":10}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"if this is intentional, prefix it with an underscore","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":3515,"byte_end":3516,"line_start":100,"line_end":100,"column_start":9,"column_end":10,"is_primary":true,"text":[{"text":"    for i in 0..durationInMinutes{","highlight_start":9,"highlight_end":10}],"label":null,"suggested_replacement":"_i","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused variable: `i`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:100:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m100\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    for i in 0..durationInMinutes{\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: if this is intentional, prefix it with an underscore: `_i`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":788,"byte_end":801,"line_start":28,"line_end":28,"column_start":9,"column_end":22,"is_primary":true,"text":[{"text":"    let mut foundData : DateTime<Utc> = Utc::now();","highlight_start":9,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_mut)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":788,"byte_end":792,"line_start":28,"line_end":28,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"    let mut foundData : DateTime<Utc> = Utc::now();","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable does not need to be mutable\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:28:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m28\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    let mut foundData : DateTime<Utc> = Utc::now();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mhelp: remove this `mut`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_mut)]` on by default\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":1282,"byte_end":1309,"line_start":44,"line_end":44,"column_start":9,"column_end":36,"is_primary":true,"text":[{"text":"    let mut neededBatteryPercantage:u8 = desiredStateOfCharge - vehicleBattery.get_current_state() ;","highlight_start":9,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":1282,"byte_end":1286,"line_start":44,"line_end":44,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"    let mut neededBatteryPercantage:u8 = desiredStateOfCharge - vehicleBattery.get_current_state() ;","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable does not need to be mutable\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:44:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m44\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    let mut neededBatteryPercantage:u8 = desiredStateOfCharge - vehicleBattery.get_current_state() ;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":1386,"byte_end":1417,"line_start":46,"line_end":46,"column_start":9,"column_end":40,"is_primary":true,"text":[{"text":"    let mut vehicleChargingCapacity_kWh = ((vehicleBattery.get_phase_count() * vehicleBattery.get_volt())) as f32 / 1000.0_f32;","highlight_start":9,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":1386,"byte_end":1390,"line_start":46,"line_end":46,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"    let mut vehicleChargingCapacity_kWh = ((vehicleBattery.get_phase_count() * vehicleBattery.get_volt())) as f32 / 1000.0_f32;","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable does not need to be mutable\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:46:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m46\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    let mut vehicleChargingCapacity_kWh = ((vehicleBattery.get_phase_count() * vehicleBattery.get_volt())) as f32 / 1000.0_f32;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":1587,"byte_end":1631,"line_start":49,"line_end":49,"column_start":9,"column_end":53,"is_primary":true,"text":[{"text":"    let mut neededCapacitykWhWithEfficiencyParameter : f32 = (( vehicleBattery.capacity as f32 / 100.0_f32 )  * neededBatteryPercantage as f32) /  vehicleBattery.get_efficiency();","highlight_start":9,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":1587,"byte_end":1591,"line_start":49,"line_end":49,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"    let mut neededCapacitykWhWithEfficiencyParameter : f32 = (( vehicleBattery.capacity as f32 / 100.0_f32 )  * neededBatteryPercantage as f32) /  vehicleBattery.get_efficiency();","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable does not need to be mutable\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:49:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m49\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    let mut neededCapacitykWhWithEfficiencyParameter : f32 = (( vehicleBattery.capacity as f32 / 100.0_f32 )  * neededBatteryPercantage a\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":2175,"byte_end":2187,"line_start":60,"line_end":60,"column_start":9,"column_end":21,"is_primary":true,"text":[{"text":"    let mut currTime = startDate.clone();","highlight_start":9,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":2175,"byte_end":2179,"line_start":60,"line_end":60,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"    let mut currTime = startDate.clone();","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable does not need to be mutable\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:60:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m60\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    let mut currTime = startDate.clone();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":2375,"byte_end":2386,"line_start":64,"line_end":64,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"    let mut endTime = currTime + Duration::minutes(totalChargingDurationInMinutes);","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":2375,"byte_end":2379,"line_start":64,"line_end":64,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"    let mut endTime = currTime + Duration::minutes(totalChargingDurationInMinutes);","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable does not need to be mutable\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:64:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m64\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    let mut endTime = currTime + Duration::minutes(totalChargingDurationInMinutes);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":3278,"byte_end":3289,"line_start":92,"line_end":92,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"    let mut endTime = startDate + Duration::minutes(durationInMinutes);","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":3278,"byte_end":3282,"line_start":92,"line_end":92,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"    let mut endTime = startDate + Duration::minutes(durationInMinutes);","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable does not need to be mutable\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:92:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m92\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    let mut endTime = startDate + Duration::minutes(durationInMinutes);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"variable does not need to be mutable","code":{"code":"unused_mut","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":3351,"byte_end":3363,"line_start":93,"line_end":93,"column_start":9,"column_end":21,"is_primary":true,"text":[{"text":"    let mut currTime = startDate.clone();","highlight_start":9,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"remove this `mut`","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":3351,"byte_end":3355,"line_start":93,"line_end":93,"column_start":9,"column_end":13,"is_primary":true,"text":[{"text":"    let mut currTime = startDate.clone();","highlight_start":9,"highlight_end":13}],"label":null,"suggested_replacement":"","suggestion_applicability":"MachineApplicable","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable does not need to be mutable\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:93:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m93\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    let mut currTime = startDate.clone();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m----\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14mhelp: remove this `mut`\u001b[0m\n\n"}
{"message":"function is never used: `get_best_time_for_charging_include_solar_power`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":225,"byte_end":271,"line_start":15,"line_end":15,"column_start":4,"column_end":50,"is_primary":true,"text":[{"text":"fn get_best_time_for_charging_include_solar_power(vehicleBattery:Battery,currDate:DateTime<Utc>, leaveDate:DateTime<Utc>, desiredStateOfCharge:u8, spotPrices:SpotPrices, solarYields:SolarYields,estimatedTravelDurationInHours : f32)-> DateTime<Utc>","highlight_start":4,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(dead_code)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: function is never used: `get_best_time_for_charging_include_solar_power`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:15:4\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0mfn get_best_time_for_charging_include_solar_power(vehicleBattery:Battery,currDate:DateTime<Utc>, leaveDate:DateTime<Utc>, desiredStateOfC\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(dead_code)]` on by default\u001b[0m\n\n"}
{"message":"associated function is never used: `new`","code":{"code":"dead_code","explanation":null},"level":"warning","spans":[{"file_name":"src\\battery.rs","byte_start":436,"byte_end":439,"line_start":22,"line_end":22,"column_start":8,"column_end":11,"is_primary":true,"text":[{"text":"    fn new()-> Self{","highlight_start":8,"highlight_end":11}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: associated function is never used: `new`\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\battery.rs:22:8\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m22\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    fn new()-> Self{\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^\u001b[0m\n\n"}
{"message":"variable `vehicleBattery` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":272,"byte_end":286,"line_start":15,"line_end":15,"column_start":51,"column_end":65,"is_primary":true,"text":[{"text":"fn get_best_time_for_charging_include_solar_power(vehicleBattery:Battery,currDate:DateTime<Utc>, leaveDate:DateTime<Utc>, desiredStateOfCharge:u8, spotPrices:SpotPrices, solarYields:SolarYields,estimatedTravelDurationInHours : f32)-> DateTime<Utc>","highlight_start":51,"highlight_end":65}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(non_snake_case)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null},{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":272,"byte_end":286,"line_start":15,"line_end":15,"column_start":51,"column_end":65,"is_primary":true,"text":[{"text":"fn get_best_time_for_charging_include_solar_power(vehicleBattery:Battery,currDate:DateTime<Utc>, leaveDate:DateTime<Utc>, desiredStateOfCharge:u8, spotPrices:SpotPrices, solarYields:SolarYields,estimatedTravelDurationInHours : f32)-> DateTime<Utc>","highlight_start":51,"highlight_end":65}],"label":null,"suggested_replacement":"vehicle_battery","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `vehicleBattery` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:15:51\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0mfn get_best_time_for_charging_include_solar_power(vehicleBattery:Battery,currDate:DateTime<Utc>, leaveDate:DateTime<Utc>, desiredStateOfC\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `vehicle_battery`\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(non_snake_case)]` on by default\u001b[0m\n\n"}
{"message":"variable `currDate` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":295,"byte_end":303,"line_start":15,"line_end":15,"column_start":74,"column_end":82,"is_primary":true,"text":[{"text":"fn get_best_time_for_charging_include_solar_power(vehicleBattery:Battery,currDate:DateTime<Utc>, leaveDate:DateTime<Utc>, desiredStateOfCharge:u8, spotPrices:SpotPrices, solarYields:SolarYields,estimatedTravelDurationInHours : f32)-> DateTime<Utc>","highlight_start":74,"highlight_end":82}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":295,"byte_end":303,"line_start":15,"line_end":15,"column_start":74,"column_end":82,"is_primary":true,"text":[{"text":"fn get_best_time_for_charging_include_solar_power(vehicleBattery:Battery,currDate:DateTime<Utc>, leaveDate:DateTime<Utc>, desiredStateOfCharge:u8, spotPrices:SpotPrices, solarYields:SolarYields,estimatedTravelDurationInHours : f32)-> DateTime<Utc>","highlight_start":74,"highlight_end":82}],"label":null,"suggested_replacement":"curr_date","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `currDate` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:15:74\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| ...\u001b[0m\u001b[0msolar_power(vehicleBattery:Battery,currDate:DateTime<Utc>, leaveDate:DateTime<Utc>, desiredStateOfCharge:u8, spotPrices:SpotPrices, so\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                      \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `curr_date`\u001b[0m\n\n"}
{"message":"variable `leaveDate` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":319,"byte_end":328,"line_start":15,"line_end":15,"column_start":98,"column_end":107,"is_primary":true,"text":[{"text":"fn get_best_time_for_charging_include_solar_power(vehicleBattery:Battery,currDate:DateTime<Utc>, leaveDate:DateTime<Utc>, desiredStateOfCharge:u8, spotPrices:SpotPrices, solarYields:SolarYields,estimatedTravelDurationInHours : f32)-> DateTime<Utc>","highlight_start":98,"highlight_end":107}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":319,"byte_end":328,"line_start":15,"line_end":15,"column_start":98,"column_end":107,"is_primary":true,"text":[{"text":"fn get_best_time_for_charging_include_solar_power(vehicleBattery:Battery,currDate:DateTime<Utc>, leaveDate:DateTime<Utc>, desiredStateOfCharge:u8, spotPrices:SpotPrices, solarYields:SolarYields,estimatedTravelDurationInHours : f32)-> DateTime<Utc>","highlight_start":98,"highlight_end":107}],"label":null,"suggested_replacement":"leave_date","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `leaveDate` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:15:98\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| ...\u001b[0m\u001b[0my:Battery,currDate:DateTime<Utc>, leaveDate:DateTime<Utc>, desiredStateOfCharge:u8, spotPrices:SpotPrices, solarYields:SolarYields,est\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `leave_date`\u001b[0m\n\n"}
{"message":"variable `desiredStateOfCharge` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":344,"byte_end":364,"line_start":15,"line_end":15,"column_start":123,"column_end":143,"is_primary":true,"text":[{"text":"fn get_best_time_for_charging_include_solar_power(vehicleBattery:Battery,currDate:DateTime<Utc>, leaveDate:DateTime<Utc>, desiredStateOfCharge:u8, spotPrices:SpotPrices, solarYields:SolarYields,estimatedTravelDurationInHours : f32)-> DateTime<Utc>","highlight_start":123,"highlight_end":143}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":344,"byte_end":364,"line_start":15,"line_end":15,"column_start":123,"column_end":143,"is_primary":true,"text":[{"text":"fn get_best_time_for_charging_include_solar_power(vehicleBattery:Battery,currDate:DateTime<Utc>, leaveDate:DateTime<Utc>, desiredStateOfCharge:u8, spotPrices:SpotPrices, solarYields:SolarYields,estimatedTravelDurationInHours : f32)-> DateTime<Utc>","highlight_start":123,"highlight_end":143}],"label":null,"suggested_replacement":"desired_state_of_charge","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `desiredStateOfCharge` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:15:123\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| ...\u001b[0m\u001b[0mveDate:DateTime<Utc>, desiredStateOfCharge:u8, spotPrices:SpotPrices, solarYields:SolarYields,estimatedTravelDurationInHours : f32)-> \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `desired_state_of_charge`\u001b[0m\n\n"}
{"message":"variable `spotPrices` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":369,"byte_end":379,"line_start":15,"line_end":15,"column_start":148,"column_end":158,"is_primary":true,"text":[{"text":"fn get_best_time_for_charging_include_solar_power(vehicleBattery:Battery,currDate:DateTime<Utc>, leaveDate:DateTime<Utc>, desiredStateOfCharge:u8, spotPrices:SpotPrices, solarYields:SolarYields,estimatedTravelDurationInHours : f32)-> DateTime<Utc>","highlight_start":148,"highlight_end":158}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":369,"byte_end":379,"line_start":15,"line_end":15,"column_start":148,"column_end":158,"is_primary":true,"text":[{"text":"fn get_best_time_for_charging_include_solar_power(vehicleBattery:Battery,currDate:DateTime<Utc>, leaveDate:DateTime<Utc>, desiredStateOfCharge:u8, spotPrices:SpotPrices, solarYields:SolarYields,estimatedTravelDurationInHours : f32)-> DateTime<Utc>","highlight_start":148,"highlight_end":158}],"label":null,"suggested_replacement":"spot_prices","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `spotPrices` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:15:148\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| ...\u001b[0m\u001b[0me<Utc>, desiredStateOfCharge:u8, spotPrices:SpotPrices, solarYields:SolarYields,estimatedTravelDurationInHours : f32)-> DateTime<Utc>\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `spot_prices`\u001b[0m\n\n"}
{"message":"variable `solarYields` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":392,"byte_end":403,"line_start":15,"line_end":15,"column_start":171,"column_end":182,"is_primary":true,"text":[{"text":"fn get_best_time_for_charging_include_solar_power(vehicleBattery:Battery,currDate:DateTime<Utc>, leaveDate:DateTime<Utc>, desiredStateOfCharge:u8, spotPrices:SpotPrices, solarYields:SolarYields,estimatedTravelDurationInHours : f32)-> DateTime<Utc>","highlight_start":171,"highlight_end":182}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":392,"byte_end":403,"line_start":15,"line_end":15,"column_start":171,"column_end":182,"is_primary":true,"text":[{"text":"fn get_best_time_for_charging_include_solar_power(vehicleBattery:Battery,currDate:DateTime<Utc>, leaveDate:DateTime<Utc>, desiredStateOfCharge:u8, spotPrices:SpotPrices, solarYields:SolarYields,estimatedTravelDurationInHours : f32)-> DateTime<Utc>","highlight_start":171,"highlight_end":182}],"label":null,"suggested_replacement":"solar_yields","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `solarYields` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:15:171\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| ...\u001b[0m\u001b[0marge:u8, spotPrices:SpotPrices, solarYields:SolarYields,estimatedTravelDurationInHours : f32)-> DateTime<Utc>\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `solar_yields`\u001b[0m\n\n"}
{"message":"variable `estimatedTravelDurationInHours` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":416,"byte_end":446,"line_start":15,"line_end":15,"column_start":195,"column_end":225,"is_primary":true,"text":[{"text":"fn get_best_time_for_charging_include_solar_power(vehicleBattery:Battery,currDate:DateTime<Utc>, leaveDate:DateTime<Utc>, desiredStateOfCharge:u8, spotPrices:SpotPrices, solarYields:SolarYields,estimatedTravelDurationInHours : f32)-> DateTime<Utc>","highlight_start":195,"highlight_end":225}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":416,"byte_end":446,"line_start":15,"line_end":15,"column_start":195,"column_end":225,"is_primary":true,"text":[{"text":"fn get_best_time_for_charging_include_solar_power(vehicleBattery:Battery,currDate:DateTime<Utc>, leaveDate:DateTime<Utc>, desiredStateOfCharge:u8, spotPrices:SpotPrices, solarYields:SolarYields,estimatedTravelDurationInHours : f32)-> DateTime<Utc>","highlight_start":195,"highlight_end":225}],"label":null,"suggested_replacement":"estimated_travel_duration_in_hours","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `estimatedTravelDurationInHours` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:15:195\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m15\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| ...\u001b[0m\u001b[0molarYields,estimatedTravelDurationInHours : f32)-> DateTime<Utc>\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `estimated_travel_duration_in_hours`\u001b[0m\n\n"}
{"message":"variable `foundData` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":484,"byte_end":493,"line_start":18,"line_end":18,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"    let foundData : DateTime<Utc> = Utc::now();","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":484,"byte_end":493,"line_start":18,"line_end":18,"column_start":9,"column_end":18,"is_primary":true,"text":[{"text":"    let foundData : DateTime<Utc> = Utc::now();","highlight_start":9,"highlight_end":18}],"label":null,"suggested_replacement":"found_data","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `foundData` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:18:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m18\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    let foundData : DateTime<Utc> = Utc::now();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `found_data`\u001b[0m\n\n"}
{"message":"variable `vehicleBattery` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":636,"byte_end":650,"line_start":25,"line_end":25,"column_start":40,"column_end":54,"is_primary":true,"text":[{"text":"pub fn get_best_to_time_start_charging(vehicleBattery:Battery,currDate:DateTime<Utc>, travelDate:DateTime<Utc>, desiredStateOfCharge:u8, spotPrices:SpotPrices) -> DateTime<Utc>","highlight_start":40,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":636,"byte_end":650,"line_start":25,"line_end":25,"column_start":40,"column_end":54,"is_primary":true,"text":[{"text":"pub fn get_best_to_time_start_charging(vehicleBattery:Battery,currDate:DateTime<Utc>, travelDate:DateTime<Utc>, desiredStateOfCharge:u8, spotPrices:SpotPrices) -> DateTime<Utc>","highlight_start":40,"highlight_end":54}],"label":null,"suggested_replacement":"vehicle_battery","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `vehicleBattery` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:25:40\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0mpub fn get_best_to_time_start_charging(vehicleBattery:Battery,currDate:DateTime<Utc>, travelDate:DateTime<Utc>, desiredStateOfCharge:u8, \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                       \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `vehicle_battery`\u001b[0m\n\n"}
{"message":"variable `currDate` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":659,"byte_end":667,"line_start":25,"line_end":25,"column_start":63,"column_end":71,"is_primary":true,"text":[{"text":"pub fn get_best_to_time_start_charging(vehicleBattery:Battery,currDate:DateTime<Utc>, travelDate:DateTime<Utc>, desiredStateOfCharge:u8, spotPrices:SpotPrices) -> DateTime<Utc>","highlight_start":63,"highlight_end":71}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":659,"byte_end":667,"line_start":25,"line_end":25,"column_start":63,"column_end":71,"is_primary":true,"text":[{"text":"pub fn get_best_to_time_start_charging(vehicleBattery:Battery,currDate:DateTime<Utc>, travelDate:DateTime<Utc>, desiredStateOfCharge:u8, spotPrices:SpotPrices) -> DateTime<Utc>","highlight_start":63,"highlight_end":71}],"label":null,"suggested_replacement":"curr_date","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `currDate` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:25:63\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0mpub fn get_best_to_time_start_charging(vehicleBattery:Battery,currDate:DateTime<Utc>, travelDate:DateTime<Utc>, desiredStateOfCharge:u8, \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                                              \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `curr_date`\u001b[0m\n\n"}
{"message":"variable `travelDate` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":683,"byte_end":693,"line_start":25,"line_end":25,"column_start":87,"column_end":97,"is_primary":true,"text":[{"text":"pub fn get_best_to_time_start_charging(vehicleBattery:Battery,currDate:DateTime<Utc>, travelDate:DateTime<Utc>, desiredStateOfCharge:u8, spotPrices:SpotPrices) -> DateTime<Utc>","highlight_start":87,"highlight_end":97}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":683,"byte_end":693,"line_start":25,"line_end":25,"column_start":87,"column_end":97,"is_primary":true,"text":[{"text":"pub fn get_best_to_time_start_charging(vehicleBattery:Battery,currDate:DateTime<Utc>, travelDate:DateTime<Utc>, desiredStateOfCharge:u8, spotPrices:SpotPrices) -> DateTime<Utc>","highlight_start":87,"highlight_end":97}],"label":null,"suggested_replacement":"travel_date","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `travelDate` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:25:87\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| ...\u001b[0m\u001b[0m:Battery,currDate:DateTime<Utc>, travelDate:DateTime<Utc>, desiredStateOfCharge:u8, spotPrices:SpotPrices) -> DateTime<Utc>\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `travel_date`\u001b[0m\n\n"}
{"message":"variable `desiredStateOfCharge` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":709,"byte_end":729,"line_start":25,"line_end":25,"column_start":113,"column_end":133,"is_primary":true,"text":[{"text":"pub fn get_best_to_time_start_charging(vehicleBattery:Battery,currDate:DateTime<Utc>, travelDate:DateTime<Utc>, desiredStateOfCharge:u8, spotPrices:SpotPrices) -> DateTime<Utc>","highlight_start":113,"highlight_end":133}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":709,"byte_end":729,"line_start":25,"line_end":25,"column_start":113,"column_end":133,"is_primary":true,"text":[{"text":"pub fn get_best_to_time_start_charging(vehicleBattery:Battery,currDate:DateTime<Utc>, travelDate:DateTime<Utc>, desiredStateOfCharge:u8, spotPrices:SpotPrices) -> DateTime<Utc>","highlight_start":113,"highlight_end":133}],"label":null,"suggested_replacement":"desired_state_of_charge","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `desiredStateOfCharge` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:25:113\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| ...\u001b[0m\u001b[0melDate:DateTime<Utc>, desiredStateOfCharge:u8, spotPrices:SpotPrices) -> DateTime<Utc>\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                         \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `desired_state_of_charge`\u001b[0m\n\n"}
{"message":"variable `spotPrices` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":734,"byte_end":744,"line_start":25,"line_end":25,"column_start":138,"column_end":148,"is_primary":true,"text":[{"text":"pub fn get_best_to_time_start_charging(vehicleBattery:Battery,currDate:DateTime<Utc>, travelDate:DateTime<Utc>, desiredStateOfCharge:u8, spotPrices:SpotPrices) -> DateTime<Utc>","highlight_start":138,"highlight_end":148}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":734,"byte_end":744,"line_start":25,"line_end":25,"column_start":138,"column_end":148,"is_primary":true,"text":[{"text":"pub fn get_best_to_time_start_charging(vehicleBattery:Battery,currDate:DateTime<Utc>, travelDate:DateTime<Utc>, desiredStateOfCharge:u8, spotPrices:SpotPrices) -> DateTime<Utc>","highlight_start":138,"highlight_end":148}],"label":null,"suggested_replacement":"spot_prices","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `spotPrices` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:25:138\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m25\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| ...\u001b[0m\u001b[0me<Utc>, desiredStateOfCharge:u8, spotPrices:SpotPrices) -> DateTime<Utc>\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `spot_prices`\u001b[0m\n\n"}
{"message":"variable `foundData` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":792,"byte_end":801,"line_start":28,"line_end":28,"column_start":13,"column_end":22,"is_primary":true,"text":[{"text":"    let mut foundData : DateTime<Utc> = Utc::now();","highlight_start":13,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":792,"byte_end":801,"line_start":28,"line_end":28,"column_start":13,"column_end":22,"is_primary":true,"text":[{"text":"    let mut foundData : DateTime<Utc> = Utc::now();","highlight_start":13,"highlight_end":22}],"label":null,"suggested_replacement":"found_data","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `foundData` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:28:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m28\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    let mut foundData : DateTime<Utc> = Utc::now();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `found_data`\u001b[0m\n\n"}
{"message":"variable `neededBatteryPercantage` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":1286,"byte_end":1309,"line_start":44,"line_end":44,"column_start":13,"column_end":36,"is_primary":true,"text":[{"text":"    let mut neededBatteryPercantage:u8 = desiredStateOfCharge - vehicleBattery.get_current_state() ;","highlight_start":13,"highlight_end":36}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":1286,"byte_end":1309,"line_start":44,"line_end":44,"column_start":13,"column_end":36,"is_primary":true,"text":[{"text":"    let mut neededBatteryPercantage:u8 = desiredStateOfCharge - vehicleBattery.get_current_state() ;","highlight_start":13,"highlight_end":36}],"label":null,"suggested_replacement":"needed_battery_percantage","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `neededBatteryPercantage` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:44:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m44\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    let mut neededBatteryPercantage:u8 = desiredStateOfCharge - vehicleBattery.get_current_state() ;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `needed_battery_percantage`\u001b[0m\n\n"}
{"message":"variable `vehicleChargingCapacity_kWh` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":1390,"byte_end":1417,"line_start":46,"line_end":46,"column_start":13,"column_end":40,"is_primary":true,"text":[{"text":"    let mut vehicleChargingCapacity_kWh = ((vehicleBattery.get_phase_count() * vehicleBattery.get_volt())) as f32 / 1000.0_f32;","highlight_start":13,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":1390,"byte_end":1417,"line_start":46,"line_end":46,"column_start":13,"column_end":40,"is_primary":true,"text":[{"text":"    let mut vehicleChargingCapacity_kWh = ((vehicleBattery.get_phase_count() * vehicleBattery.get_volt())) as f32 / 1000.0_f32;","highlight_start":13,"highlight_end":40}],"label":null,"suggested_replacement":"vehicle_charging_capacity_k_wh","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `vehicleChargingCapacity_kWh` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:46:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m46\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    let mut vehicleChargingCapacity_kWh = ((vehicleBattery.get_phase_count() * vehicleBattery.get_volt())) as f32 / 1000.0_f32;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `vehicle_charging_capacity_k_wh`\u001b[0m\n\n"}
{"message":"variable `neededCapacitykWhWithEfficiencyParameter` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":1591,"byte_end":1631,"line_start":49,"line_end":49,"column_start":13,"column_end":53,"is_primary":true,"text":[{"text":"    let mut neededCapacitykWhWithEfficiencyParameter : f32 = (( vehicleBattery.capacity as f32 / 100.0_f32 )  * neededBatteryPercantage as f32) /  vehicleBattery.get_efficiency();","highlight_start":13,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":1591,"byte_end":1631,"line_start":49,"line_end":49,"column_start":13,"column_end":53,"is_primary":true,"text":[{"text":"    let mut neededCapacitykWhWithEfficiencyParameter : f32 = (( vehicleBattery.capacity as f32 / 100.0_f32 )  * neededBatteryPercantage as f32) /  vehicleBattery.get_efficiency();","highlight_start":13,"highlight_end":53}],"label":null,"suggested_replacement":"needed_capacityk_wh_with_efficiency_parameter","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `neededCapacitykWhWithEfficiencyParameter` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:49:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m49\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    let mut neededCapacitykWhWithEfficiencyParameter : f32 = (( vehicleBattery.capacity as f32 / 100.0_f32 )  * neededBatteryPercantage a\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `needed_capacityk_wh_with_efficiency_parameter`\u001b[0m\n\n"}
{"message":"variable `spotPrices` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":1981,"byte_end":1991,"line_start":57,"line_end":57,"column_start":38,"column_end":48,"is_primary":true,"text":[{"text":"fn get_best_charging_time_for_ground(spotPrices:&SpotPrices, startDate:DateTime<Utc>, travelDate:DateTime<Utc>,neededCapacity_kWh:f32,charginCapacity_Kwh:f32) -> DateTime<Utc>{","highlight_start":38,"highlight_end":48}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":1981,"byte_end":1991,"line_start":57,"line_end":57,"column_start":38,"column_end":48,"is_primary":true,"text":[{"text":"fn get_best_charging_time_for_ground(spotPrices:&SpotPrices, startDate:DateTime<Utc>, travelDate:DateTime<Utc>,neededCapacity_kWh:f32,charginCapacity_Kwh:f32) -> DateTime<Utc>{","highlight_start":38,"highlight_end":48}],"label":null,"suggested_replacement":"spot_prices","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `spotPrices` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:57:38\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m57\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0mfn get_best_charging_time_for_ground(spotPrices:&SpotPrices, startDate:DateTime<Utc>, travelDate:DateTime<Utc>,neededCapacity_kWh:f32,cha\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                     \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `spot_prices`\u001b[0m\n\n"}
{"message":"variable `startDate` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":2005,"byte_end":2014,"line_start":57,"line_end":57,"column_start":62,"column_end":71,"is_primary":true,"text":[{"text":"fn get_best_charging_time_for_ground(spotPrices:&SpotPrices, startDate:DateTime<Utc>, travelDate:DateTime<Utc>,neededCapacity_kWh:f32,charginCapacity_Kwh:f32) -> DateTime<Utc>{","highlight_start":62,"highlight_end":71}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":2005,"byte_end":2014,"line_start":57,"line_end":57,"column_start":62,"column_end":71,"is_primary":true,"text":[{"text":"fn get_best_charging_time_for_ground(spotPrices:&SpotPrices, startDate:DateTime<Utc>, travelDate:DateTime<Utc>,neededCapacity_kWh:f32,charginCapacity_Kwh:f32) -> DateTime<Utc>{","highlight_start":62,"highlight_end":71}],"label":null,"suggested_replacement":"start_date","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `startDate` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:57:62\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m57\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0mfn get_best_charging_time_for_ground(spotPrices:&SpotPrices, startDate:DateTime<Utc>, travelDate:DateTime<Utc>,neededCapacity_kWh:f32,cha\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m...\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `start_date`\u001b[0m\n\n"}
{"message":"variable `travelDate` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":2030,"byte_end":2040,"line_start":57,"line_end":57,"column_start":87,"column_end":97,"is_primary":true,"text":[{"text":"fn get_best_charging_time_for_ground(spotPrices:&SpotPrices, startDate:DateTime<Utc>, travelDate:DateTime<Utc>,neededCapacity_kWh:f32,charginCapacity_Kwh:f32) -> DateTime<Utc>{","highlight_start":87,"highlight_end":97}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":2030,"byte_end":2040,"line_start":57,"line_end":57,"column_start":87,"column_end":97,"is_primary":true,"text":[{"text":"fn get_best_charging_time_for_ground(spotPrices:&SpotPrices, startDate:DateTime<Utc>, travelDate:DateTime<Utc>,neededCapacity_kWh:f32,charginCapacity_Kwh:f32) -> DateTime<Utc>{","highlight_start":87,"highlight_end":97}],"label":null,"suggested_replacement":"travel_date","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `travelDate` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:57:87\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m57\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| ...\u001b[0m\u001b[0mPrices, startDate:DateTime<Utc>, travelDate:DateTime<Utc>,neededCapacity_kWh:f32,charginCapacity_Kwh:f32) -> DateTime<Utc>{\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `travel_date`\u001b[0m\n\n"}
{"message":"variable `neededCapacity_kWh` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":2055,"byte_end":2073,"line_start":57,"line_end":57,"column_start":112,"column_end":130,"is_primary":true,"text":[{"text":"fn get_best_charging_time_for_ground(spotPrices:&SpotPrices, startDate:DateTime<Utc>, travelDate:DateTime<Utc>,neededCapacity_kWh:f32,charginCapacity_Kwh:f32) -> DateTime<Utc>{","highlight_start":112,"highlight_end":130}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":2055,"byte_end":2073,"line_start":57,"line_end":57,"column_start":112,"column_end":130,"is_primary":true,"text":[{"text":"fn get_best_charging_time_for_ground(spotPrices:&SpotPrices, startDate:DateTime<Utc>, travelDate:DateTime<Utc>,neededCapacity_kWh:f32,charginCapacity_Kwh:f32) -> DateTime<Utc>{","highlight_start":112,"highlight_end":130}],"label":null,"suggested_replacement":"needed_capacity_k_wh","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `neededCapacity_kWh` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:57:112\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m57\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| ...\u001b[0m\u001b[0mravelDate:DateTime<Utc>,neededCapacity_kWh:f32,charginCapacity_Kwh:f32) -> DateTime<Utc>{\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `needed_capacity_k_wh`\u001b[0m\n\n"}
{"message":"variable `charginCapacity_Kwh` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":2078,"byte_end":2097,"line_start":57,"line_end":57,"column_start":135,"column_end":154,"is_primary":true,"text":[{"text":"fn get_best_charging_time_for_ground(spotPrices:&SpotPrices, startDate:DateTime<Utc>, travelDate:DateTime<Utc>,neededCapacity_kWh:f32,charginCapacity_Kwh:f32) -> DateTime<Utc>{","highlight_start":135,"highlight_end":154}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":2078,"byte_end":2097,"line_start":57,"line_end":57,"column_start":135,"column_end":154,"is_primary":true,"text":[{"text":"fn get_best_charging_time_for_ground(spotPrices:&SpotPrices, startDate:DateTime<Utc>, travelDate:DateTime<Utc>,neededCapacity_kWh:f32,charginCapacity_Kwh:f32) -> DateTime<Utc>{","highlight_start":135,"highlight_end":154}],"label":null,"suggested_replacement":"chargin_capacity_kwh","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `charginCapacity_Kwh` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:57:135\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m57\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| ...\u001b[0m\u001b[0m,neededCapacity_kWh:f32,charginCapacity_Kwh:f32) -> DateTime<Utc>{\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `chargin_capacity_kwh`\u001b[0m\n\n"}
{"message":"variable `bestTime` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":2136,"byte_end":2144,"line_start":59,"line_end":59,"column_start":13,"column_end":21,"is_primary":true,"text":[{"text":"    let mut bestTime = startDate.clone();","highlight_start":13,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":2136,"byte_end":2144,"line_start":59,"line_end":59,"column_start":13,"column_end":21,"is_primary":true,"text":[{"text":"    let mut bestTime = startDate.clone();","highlight_start":13,"highlight_end":21}],"label":null,"suggested_replacement":"best_time","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `bestTime` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:59:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m59\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    let mut bestTime = startDate.clone();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `best_time`\u001b[0m\n\n"}
{"message":"variable `currTime` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":2179,"byte_end":2187,"line_start":60,"line_end":60,"column_start":13,"column_end":21,"is_primary":true,"text":[{"text":"    let mut currTime = startDate.clone();","highlight_start":13,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":2179,"byte_end":2187,"line_start":60,"line_end":60,"column_start":13,"column_end":21,"is_primary":true,"text":[{"text":"    let mut currTime = startDate.clone();","highlight_start":13,"highlight_end":21}],"label":null,"suggested_replacement":"curr_time","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `currTime` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:60:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m60\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    let mut currTime = startDate.clone();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `curr_time`\u001b[0m\n\n"}
{"message":"variable `bestPrice` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":2222,"byte_end":2231,"line_start":61,"line_end":61,"column_start":13,"column_end":22,"is_primary":true,"text":[{"text":"    let mut bestPrice = f32::MAX;","highlight_start":13,"highlight_end":22}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":2222,"byte_end":2231,"line_start":61,"line_end":61,"column_start":13,"column_end":22,"is_primary":true,"text":[{"text":"    let mut bestPrice = f32::MAX;","highlight_start":13,"highlight_end":22}],"label":null,"suggested_replacement":"best_price","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `bestPrice` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:61:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m61\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    let mut bestPrice = f32::MAX;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `best_price`\u001b[0m\n\n"}
{"message":"variable `totalChargingDurationInMinutes` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":2255,"byte_end":2285,"line_start":63,"line_end":63,"column_start":9,"column_end":39,"is_primary":true,"text":[{"text":"    let totalChargingDurationInMinutes = ((neededCapacity_kWh / charginCapacity_Kwh) * MINUTES_IN_HOUR as f32) as i64;","highlight_start":9,"highlight_end":39}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":2255,"byte_end":2285,"line_start":63,"line_end":63,"column_start":9,"column_end":39,"is_primary":true,"text":[{"text":"    let totalChargingDurationInMinutes = ((neededCapacity_kWh / charginCapacity_Kwh) * MINUTES_IN_HOUR as f32) as i64;","highlight_start":9,"highlight_end":39}],"label":null,"suggested_replacement":"total_charging_duration_in_minutes","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `totalChargingDurationInMinutes` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:63:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m63\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    let totalChargingDurationInMinutes = ((neededCapacity_kWh / charginCapacity_Kwh) * MINUTES_IN_HOUR as f32) as i64;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `total_charging_duration_in_minutes`\u001b[0m\n\n"}
{"message":"variable `endTime` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":2379,"byte_end":2386,"line_start":64,"line_end":64,"column_start":13,"column_end":20,"is_primary":true,"text":[{"text":"    let mut endTime = currTime + Duration::minutes(totalChargingDurationInMinutes);","highlight_start":13,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":2379,"byte_end":2386,"line_start":64,"line_end":64,"column_start":13,"column_end":20,"is_primary":true,"text":[{"text":"    let mut endTime = currTime + Duration::minutes(totalChargingDurationInMinutes);","highlight_start":13,"highlight_end":20}],"label":null,"suggested_replacement":"end_time","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `endTime` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:64:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m64\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    let mut endTime = currTime + Duration::minutes(totalChargingDurationInMinutes);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `end_time`\u001b[0m\n\n"}
{"message":"variable `proposedPrice` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":2650,"byte_end":2663,"line_start":71,"line_end":71,"column_start":13,"column_end":26,"is_primary":true,"text":[{"text":"        let proposedPrice = calculate_market_price_of_a_time_period(&spotPrices,currTime,totalChargingDurationInMinutes);","highlight_start":13,"highlight_end":26}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":2650,"byte_end":2663,"line_start":71,"line_end":71,"column_start":13,"column_end":26,"is_primary":true,"text":[{"text":"        let proposedPrice = calculate_market_price_of_a_time_period(&spotPrices,currTime,totalChargingDurationInMinutes);","highlight_start":13,"highlight_end":26}],"label":null,"suggested_replacement":"proposed_price","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `proposedPrice` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:71:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m71\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        let proposedPrice = calculate_market_price_of_a_time_period(&spotPrices,currTime,totalChargingDurationInMinutes);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `proposed_price`\u001b[0m\n\n"}
{"message":"unused return value of `add` that must be used","code":{"code":"unused_must_use","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":2967,"byte_end":3009,"line_start":79,"line_end":79,"column_start":9,"column_end":51,"is_primary":true,"text":[{"text":"        currTime.date().add(Duration::minutes(1));","highlight_start":9,"highlight_end":51}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"`#[warn(unused_must_use)]` on by default","code":null,"level":"note","spans":[],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused return value of `add` that must be used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:79:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m79\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        currTime.date().add(Duration::minutes(1));\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m= \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15mnote\u001b[0m\u001b[0m: `#[warn(unused_must_use)]` on by default\u001b[0m\n\n"}
{"message":"unused return value of `add` that must be used","code":{"code":"unused_must_use","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":3019,"byte_end":3060,"line_start":80,"line_end":80,"column_start":9,"column_end":50,"is_primary":true,"text":[{"text":"        endTime.date().add(Duration::minutes(1));","highlight_start":9,"highlight_end":50}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused return value of `add` that must be used\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:80:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m80\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        endTime.date().add(Duration::minutes(1));\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"variable `spotPrices` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":3154,"byte_end":3164,"line_start":90,"line_end":90,"column_start":44,"column_end":54,"is_primary":true,"text":[{"text":"fn calculate_market_price_of_a_time_period(spotPrices:&SpotPrices,startDate:DateTime<Utc>,durationInMinutes:i64) -> f32{","highlight_start":44,"highlight_end":54}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":3154,"byte_end":3164,"line_start":90,"line_end":90,"column_start":44,"column_end":54,"is_primary":true,"text":[{"text":"fn calculate_market_price_of_a_time_period(spotPrices:&SpotPrices,startDate:DateTime<Utc>,durationInMinutes:i64) -> f32{","highlight_start":44,"highlight_end":54}],"label":null,"suggested_replacement":"spot_prices","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `spotPrices` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:90:44\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m90\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0mfn calculate_market_price_of_a_time_period(spotPrices:&SpotPrices,startDate:DateTime<Utc>,durationInMinutes:i64) -> f32{\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                           \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `spot_prices`\u001b[0m\n\n"}
{"message":"variable `startDate` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":3177,"byte_end":3186,"line_start":90,"line_end":90,"column_start":67,"column_end":76,"is_primary":true,"text":[{"text":"fn calculate_market_price_of_a_time_period(spotPrices:&SpotPrices,startDate:DateTime<Utc>,durationInMinutes:i64) -> f32{","highlight_start":67,"highlight_end":76}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":3177,"byte_end":3186,"line_start":90,"line_end":90,"column_start":67,"column_end":76,"is_primary":true,"text":[{"text":"fn calculate_market_price_of_a_time_period(spotPrices:&SpotPrices,startDate:DateTime<Utc>,durationInMinutes:i64) -> f32{","highlight_start":67,"highlight_end":76}],"label":null,"suggested_replacement":"start_date","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `startDate` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:90:67\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m90\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0mfn calculate_market_price_of_a_time_period(spotPrices:&SpotPrices,startDate:DateTime<Utc>,durationInMinutes:i64) -> f32{\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                                                  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `start_date`\u001b[0m\n\n"}
{"message":"variable `durationInMinutes` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":3201,"byte_end":3218,"line_start":90,"line_end":90,"column_start":91,"column_end":108,"is_primary":true,"text":[{"text":"fn calculate_market_price_of_a_time_period(spotPrices:&SpotPrices,startDate:DateTime<Utc>,durationInMinutes:i64) -> f32{","highlight_start":91,"highlight_end":108}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":3201,"byte_end":3218,"line_start":90,"line_end":90,"column_start":91,"column_end":108,"is_primary":true,"text":[{"text":"fn calculate_market_price_of_a_time_period(spotPrices:&SpotPrices,startDate:DateTime<Utc>,durationInMinutes:i64) -> f32{","highlight_start":91,"highlight_end":108}],"label":null,"suggested_replacement":"duration_in_minutes","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `durationInMinutes` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:90:91\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m90\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0mfn calculate_market_price_of_a_time_period(spotPrices:&SpotPrices,startDate:DateTime<Utc>,durationInMinutes:i64) -> f32{\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                                                                                          \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `duration_in_minutes`\u001b[0m\n\n"}
{"message":"variable `marketPriceInMin` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":3245,"byte_end":3261,"line_start":91,"line_end":91,"column_start":13,"column_end":29,"is_primary":true,"text":[{"text":"    let mut marketPriceInMin = 0.0;","highlight_start":13,"highlight_end":29}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":3245,"byte_end":3261,"line_start":91,"line_end":91,"column_start":13,"column_end":29,"is_primary":true,"text":[{"text":"    let mut marketPriceInMin = 0.0;","highlight_start":13,"highlight_end":29}],"label":null,"suggested_replacement":"market_price_in_min","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `marketPriceInMin` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:91:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m91\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    let mut marketPriceInMin = 0.0;\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `market_price_in_min`\u001b[0m\n\n"}
{"message":"variable `endTime` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":3282,"byte_end":3289,"line_start":92,"line_end":92,"column_start":13,"column_end":20,"is_primary":true,"text":[{"text":"    let mut endTime = startDate + Duration::minutes(durationInMinutes);","highlight_start":13,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":3282,"byte_end":3289,"line_start":92,"line_end":92,"column_start":13,"column_end":20,"is_primary":true,"text":[{"text":"    let mut endTime = startDate + Duration::minutes(durationInMinutes);","highlight_start":13,"highlight_end":20}],"label":null,"suggested_replacement":"end_time","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `endTime` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:92:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m92\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    let mut endTime = startDate + Duration::minutes(durationInMinutes);\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `end_time`\u001b[0m\n\n"}
{"message":"variable `currTime` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":3355,"byte_end":3363,"line_start":93,"line_end":93,"column_start":13,"column_end":21,"is_primary":true,"text":[{"text":"    let mut currTime = startDate.clone();","highlight_start":13,"highlight_end":21}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":3355,"byte_end":3363,"line_start":93,"line_end":93,"column_start":13,"column_end":21,"is_primary":true,"text":[{"text":"    let mut currTime = startDate.clone();","highlight_start":13,"highlight_end":21}],"label":null,"suggested_replacement":"curr_time","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `currTime` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:93:13\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m93\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    let mut currTime = startDate.clone();\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m            \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `curr_time`\u001b[0m\n\n"}
{"message":"unused return value of `add` that must be used","code":{"code":"unused_must_use","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":3733,"byte_end":3777,"line_start":106,"line_end":106,"column_start":9,"column_end":53,"is_primary":true,"text":[{"text":"        currTime.date().add(Duration::minutes(1) ) ;","highlight_start":9,"highlight_end":53}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: unused return value of `add` that must be used\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:106:9\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m106\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        currTime.date().add(Duration::minutes(1) ) ;\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\u001b[0m\n\n"}
{"message":"variable `spotPrices` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":3866,"byte_end":3876,"line_start":116,"line_end":116,"column_start":30,"column_end":40,"is_primary":true,"text":[{"text":"fn get_market_price_per_hour(spotPrices:&SpotPrices,given_date:DateTime<Utc>) -> f32{","highlight_start":30,"highlight_end":40}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\charging_scheduler.rs","byte_start":3866,"byte_end":3876,"line_start":116,"line_end":116,"column_start":30,"column_end":40,"is_primary":true,"text":[{"text":"fn get_market_price_per_hour(spotPrices:&SpotPrices,given_date:DateTime<Utc>) -> f32{","highlight_start":30,"highlight_end":40}],"label":null,"suggested_replacement":"spot_prices","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: variable `spotPrices` should have a snake case name\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\charging_scheduler.rs:116:30\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m116\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0mfn get_market_price_per_hour(spotPrices:&SpotPrices,given_date:DateTime<Utc>) -> f32{\u001b[0m\n\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m                             \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `spot_prices`\u001b[0m\n\n"}
{"message":"structure field `marketPrice` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\spot_price.rs","byte_start":364,"byte_end":375,"line_start":20,"line_end":20,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"    pub marketPrice: f32,","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\spot_price.rs","byte_start":364,"byte_end":375,"line_start":20,"line_end":20,"column_start":9,"column_end":20,"is_primary":true,"text":[{"text":"    pub marketPrice: f32,","highlight_start":9,"highlight_end":20}],"label":null,"suggested_replacement":"market_price","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: structure field `marketPrice` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\spot_price.rs:20:9\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m20\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    pub marketPrice: f32,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m        \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `market_price`\u001b[0m\n\n"}
{"message":"structure field `solarYieldWattHour` should have a snake case name","code":{"code":"non_snake_case","explanation":null},"level":"warning","spans":[{"file_name":"src\\solar_yield.rs","byte_start":306,"byte_end":324,"line_start":17,"line_end":17,"column_start":5,"column_end":23,"is_primary":true,"text":[{"text":"    solarYieldWattHour:u16,","highlight_start":5,"highlight_end":23}],"label":null,"suggested_replacement":null,"suggestion_applicability":null,"expansion":null}],"children":[{"message":"convert the identifier to snake case","code":null,"level":"help","spans":[{"file_name":"src\\solar_yield.rs","byte_start":306,"byte_end":324,"line_start":17,"line_end":17,"column_start":5,"column_end":23,"is_primary":true,"text":[{"text":"    solarYieldWattHour:u16,","highlight_start":5,"highlight_end":23}],"label":null,"suggested_replacement":"solar_yield_watt_hour","suggestion_applicability":"MaybeIncorrect","expansion":null}],"children":[],"rendered":null}],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: structure field `solarYieldWattHour` should have a snake case name\u001b[0m\n\u001b[0m  \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m--> \u001b[0m\u001b[0msrc\\solar_yield.rs:17:5\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m|\u001b[0m\n\u001b[0m\u001b[1m\u001b[38;5;14m17\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    solarYieldWattHour:u16,\u001b[0m\n\u001b[0m   \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;14m| \u001b[0m\u001b[0m    \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11m^^^^^^^^^^^^^^^^^^\u001b[0m\u001b[0m \u001b[0m\u001b[0m\u001b[1m\u001b[38;5;11mhelp: convert the identifier to snake case: `solar_yield_watt_hour`\u001b[0m\n\n"}
{"message":"72 warnings emitted","code":null,"level":"warning","spans":[],"children":[],"rendered":"\u001b[0m\u001b[1m\u001b[38;5;11mwarning\u001b[0m\u001b[0m\u001b[1m\u001b[38;5;15m: 72 warnings emitted\u001b[0m\n\n"}
